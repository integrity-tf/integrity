/*
 * generated by Xtext
 */
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.gebit.integrity.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.gebit.integrity.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.gebit.integrity.services.DSLGrammarAccess;

}

@parser::members {
 
 	private DSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleComment
entryRuleVisibleComment 
:
{ before(grammarAccess.getVisibleCommentRule()); }
	 ruleVisibleComment
{ after(grammarAccess.getVisibleCommentRule()); } 
	 EOF 
;

// Rule VisibleComment
ruleVisibleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleCommentAccess().getAlternatives()); }
(rule__VisibleComment__Alternatives)
{ after(grammarAccess.getVisibleCommentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleSingleLineComment
entryRuleVisibleSingleLineComment 
:
{ before(grammarAccess.getVisibleSingleLineCommentRule()); }
	 ruleVisibleSingleLineComment
{ after(grammarAccess.getVisibleSingleLineCommentRule()); } 
	 EOF 
;

// Rule VisibleSingleLineComment
ruleVisibleSingleLineComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleSingleLineCommentAccess().getAlternatives()); }
(rule__VisibleSingleLineComment__Alternatives)
{ after(grammarAccess.getVisibleSingleLineCommentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleSingleLineNormalComment
entryRuleVisibleSingleLineNormalComment 
:
{ before(grammarAccess.getVisibleSingleLineNormalCommentRule()); }
	 ruleVisibleSingleLineNormalComment
{ after(grammarAccess.getVisibleSingleLineNormalCommentRule()); } 
	 EOF 
;

// Rule VisibleSingleLineNormalComment
ruleVisibleSingleLineNormalComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleSingleLineNormalCommentAccess().getGroup()); }
(rule__VisibleSingleLineNormalComment__Group__0)
{ after(grammarAccess.getVisibleSingleLineNormalCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleSingleLineTitleComment
entryRuleVisibleSingleLineTitleComment 
:
{ before(grammarAccess.getVisibleSingleLineTitleCommentRule()); }
	 ruleVisibleSingleLineTitleComment
{ after(grammarAccess.getVisibleSingleLineTitleCommentRule()); } 
	 EOF 
;

// Rule VisibleSingleLineTitleComment
ruleVisibleSingleLineTitleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleSingleLineTitleCommentAccess().getGroup()); }
(rule__VisibleSingleLineTitleComment__Group__0)
{ after(grammarAccess.getVisibleSingleLineTitleCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleMultiLineComment
entryRuleVisibleMultiLineComment 
:
{ before(grammarAccess.getVisibleMultiLineCommentRule()); }
	 ruleVisibleMultiLineComment
{ after(grammarAccess.getVisibleMultiLineCommentRule()); } 
	 EOF 
;

// Rule VisibleMultiLineComment
ruleVisibleMultiLineComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleMultiLineCommentAccess().getAlternatives()); }
(rule__VisibleMultiLineComment__Alternatives)
{ after(grammarAccess.getVisibleMultiLineCommentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleMultiLineNormalComment
entryRuleVisibleMultiLineNormalComment 
:
{ before(grammarAccess.getVisibleMultiLineNormalCommentRule()); }
	 ruleVisibleMultiLineNormalComment
{ after(grammarAccess.getVisibleMultiLineNormalCommentRule()); } 
	 EOF 
;

// Rule VisibleMultiLineNormalComment
ruleVisibleMultiLineNormalComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleMultiLineNormalCommentAccess().getGroup()); }
(rule__VisibleMultiLineNormalComment__Group__0)
{ after(grammarAccess.getVisibleMultiLineNormalCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleMultiLineTitleComment
entryRuleVisibleMultiLineTitleComment 
:
{ before(grammarAccess.getVisibleMultiLineTitleCommentRule()); }
	 ruleVisibleMultiLineTitleComment
{ after(grammarAccess.getVisibleMultiLineTitleCommentRule()); } 
	 EOF 
;

// Rule VisibleMultiLineTitleComment
ruleVisibleMultiLineTitleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleMultiLineTitleCommentAccess().getGroup()); }
(rule__VisibleMultiLineTitleComment__Group__0)
{ after(grammarAccess.getVisibleMultiLineTitleCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleDivider
entryRuleVisibleDivider 
:
{ before(grammarAccess.getVisibleDividerRule()); }
	 ruleVisibleDivider
{ after(grammarAccess.getVisibleDividerRule()); } 
	 EOF 
;

// Rule VisibleDivider
ruleVisibleDivider
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleDividerAccess().getGroup()); }
(rule__VisibleDivider__Group__0)
{ after(grammarAccess.getVisibleDividerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDefinition
entryRulePackageDefinition 
:
{ before(grammarAccess.getPackageDefinitionRule()); }
	 rulePackageDefinition
{ after(grammarAccess.getPackageDefinitionRule()); } 
	 EOF 
;

// Rule PackageDefinition
rulePackageDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDefinitionAccess().getGroup()); }
(rule__PackageDefinition__Group__0)
{ after(grammarAccess.getPackageDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageStatement
entryRulePackageStatement 
:
{ before(grammarAccess.getPackageStatementRule()); }
	 rulePackageStatement
{ after(grammarAccess.getPackageStatementRule()); } 
	 EOF 
;

// Rule PackageStatement
rulePackageStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageStatementAccess().getAlternatives()); }
(rule__PackageStatement__Alternatives)
{ after(grammarAccess.getPackageStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForkDefinition
entryRuleForkDefinition 
:
{ before(grammarAccess.getForkDefinitionRule()); }
	 ruleForkDefinition
{ after(grammarAccess.getForkDefinitionRule()); } 
	 EOF 
;

// Rule ForkDefinition
ruleForkDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForkDefinitionAccess().getGroup()); }
(rule__ForkDefinition__Group__0)
{ after(grammarAccess.getForkDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForkParameter
entryRuleForkParameter 
:
{ before(grammarAccess.getForkParameterRule()); }
	 ruleForkParameter
{ after(grammarAccess.getForkParameterRule()); } 
	 EOF 
;

// Rule ForkParameter
ruleForkParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForkParameterAccess().getGroup()); }
(rule__ForkParameter__Group__0)
{ after(grammarAccess.getForkParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariantDefinition
entryRuleVariantDefinition 
:
{ before(grammarAccess.getVariantDefinitionRule()); }
	 ruleVariantDefinition
{ after(grammarAccess.getVariantDefinitionRule()); } 
	 EOF 
;

// Rule VariantDefinition
ruleVariantDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariantDefinitionAccess().getGroup()); }
(rule__VariantDefinition__Group__0)
{ after(grammarAccess.getVariantDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestDefinition
entryRuleTestDefinition 
:
{ before(grammarAccess.getTestDefinitionRule()); }
	 ruleTestDefinition
{ after(grammarAccess.getTestDefinitionRule()); } 
	 EOF 
;

// Rule TestDefinition
ruleTestDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestDefinitionAccess().getGroup()); }
(rule__TestDefinition__Group__0)
{ after(grammarAccess.getTestDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallDefinition
entryRuleCallDefinition 
:
{ before(grammarAccess.getCallDefinitionRule()); }
	 ruleCallDefinition
{ after(grammarAccess.getCallDefinitionRule()); } 
	 EOF 
;

// Rule CallDefinition
ruleCallDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallDefinitionAccess().getGroup()); }
(rule__CallDefinition__Group__0)
{ after(grammarAccess.getCallDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteDefinition
entryRuleSuiteDefinition 
:
{ before(grammarAccess.getSuiteDefinitionRule()); }
	 ruleSuiteDefinition
{ after(grammarAccess.getSuiteDefinitionRule()); } 
	 EOF 
;

// Rule SuiteDefinition
ruleSuiteDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup()); }
(rule__SuiteDefinition__Group__0)
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteParameterDefinition
entryRuleSuiteParameterDefinition 
:
{ before(grammarAccess.getSuiteParameterDefinitionRule()); }
	 ruleSuiteParameterDefinition
{ after(grammarAccess.getSuiteParameterDefinitionRule()); } 
	 EOF 
;

// Rule SuiteParameterDefinition
ruleSuiteParameterDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteParameterDefinitionAccess().getGroup()); }
(rule__SuiteParameterDefinition__Group__0)
{ after(grammarAccess.getSuiteParameterDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteReturnDefinition
entryRuleSuiteReturnDefinition 
:
{ before(grammarAccess.getSuiteReturnDefinitionRule()); }
	 ruleSuiteReturnDefinition
{ after(grammarAccess.getSuiteReturnDefinitionRule()); } 
	 EOF 
;

// Rule SuiteReturnDefinition
ruleSuiteReturnDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteReturnDefinitionAccess().getNameAssignment()); }
(rule__SuiteReturnDefinition__NameAssignment)
{ after(grammarAccess.getSuiteReturnDefinitionAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationDefinition
entryRuleOperationDefinition 
:
{ before(grammarAccess.getOperationDefinitionRule()); }
	 ruleOperationDefinition
{ after(grammarAccess.getOperationDefinitionRule()); } 
	 EOF 
;

// Rule OperationDefinition
ruleOperationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationDefinitionAccess().getGroup()); }
(rule__OperationDefinition__Group__0)
{ after(grammarAccess.getOperationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteStatement
entryRuleSuiteStatement 
:
{ before(grammarAccess.getSuiteStatementRule()); }
	 ruleSuiteStatement
{ after(grammarAccess.getSuiteStatementRule()); } 
	 EOF 
;

// Rule SuiteStatement
ruleSuiteStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteStatementAccess().getAlternatives()); }
(rule__SuiteStatement__Alternatives)
{ after(grammarAccess.getSuiteStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteStatementWithResult
entryRuleSuiteStatementWithResult 
:
{ before(grammarAccess.getSuiteStatementWithResultRule()); }
	 ruleSuiteStatementWithResult
{ after(grammarAccess.getSuiteStatementWithResultRule()); } 
	 EOF 
;

// Rule SuiteStatementWithResult
ruleSuiteStatementWithResult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getAlternatives()); }
(rule__SuiteStatementWithResult__Alternatives)
{ after(grammarAccess.getSuiteStatementWithResultAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition 
:
{ before(grammarAccess.getVariableDefinitionRule()); }
	 ruleVariableDefinition
{ after(grammarAccess.getVariableDefinitionRule()); } 
	 EOF 
;

// Rule VariableDefinition
ruleVariableDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDefinitionAccess().getGroup()); }
(rule__VariableDefinition__Group__0)
{ after(grammarAccess.getVariableDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDefinition
entryRuleConstantDefinition 
:
{ before(grammarAccess.getConstantDefinitionRule()); }
	 ruleConstantDefinition
{ after(grammarAccess.getConstantDefinitionRule()); } 
	 EOF 
;

// Rule ConstantDefinition
ruleConstantDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup()); }
(rule__ConstantDefinition__Group__0)
{ after(grammarAccess.getConstantDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableAssignment
entryRuleVariableAssignment 
:
{ before(grammarAccess.getVariableAssignmentRule()); }
	 ruleVariableAssignment
{ after(grammarAccess.getVariableAssignmentRule()); } 
	 EOF 
;

// Rule VariableAssignment
ruleVariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAssignmentAccess().getGroup()); }
(rule__VariableAssignment__Group__0)
{ after(grammarAccess.getVariableAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariantValue
entryRuleVariantValue 
:
{ before(grammarAccess.getVariantValueRule()); }
	 ruleVariantValue
{ after(grammarAccess.getVariantValueRule()); } 
	 EOF 
;

// Rule VariantValue
ruleVariantValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariantValueAccess().getGroup()); }
(rule__VariantValue__Group__0)
{ after(grammarAccess.getVariantValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableEntity
entryRuleVariableEntity 
:
{ before(grammarAccess.getVariableEntityRule()); }
	 ruleVariableEntity
{ after(grammarAccess.getVariableEntityRule()); } 
	 EOF 
;

// Rule VariableEntity
ruleVariableEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableEntityAccess().getNameAssignment()); }
(rule__VariableEntity__NameAssignment)
{ after(grammarAccess.getVariableEntityAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantEntity
entryRuleConstantEntity 
:
{ before(grammarAccess.getConstantEntityRule()); }
	 ruleConstantEntity
{ after(grammarAccess.getConstantEntityRule()); } 
	 EOF 
;

// Rule ConstantEntity
ruleConstantEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantEntityAccess().getNameAssignment()); }
(rule__ConstantEntity__NameAssignment)
{ after(grammarAccess.getConstantEntityAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTest
entryRuleTest 
:
{ before(grammarAccess.getTestRule()); }
	 ruleTest
{ after(grammarAccess.getTestRule()); } 
	 EOF 
;

// Rule Test
ruleTest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestAccess().getGroup()); }
(rule__Test__Group__0)
{ after(grammarAccess.getTestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTableTest
entryRuleTableTest 
:
{ before(grammarAccess.getTableTestRule()); }
	 ruleTableTest
{ after(grammarAccess.getTableTestRule()); } 
	 EOF 
;

// Rule TableTest
ruleTableTest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableTestAccess().getGroup()); }
(rule__TableTest__Group__0)
{ after(grammarAccess.getTableTestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTableTestRow
entryRuleTableTestRow 
:
{ before(grammarAccess.getTableTestRowRule()); }
	 ruleTableTestRow
{ after(grammarAccess.getTableTestRowRule()); } 
	 EOF 
;

// Rule TableTestRow
ruleTableTestRow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableTestRowAccess().getGroup()); }
(rule__TableTestRow__Group__0)
{ after(grammarAccess.getTableTestRowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterTableHeader
entryRuleParameterTableHeader 
:
{ before(grammarAccess.getParameterTableHeaderRule()); }
	 ruleParameterTableHeader
{ after(grammarAccess.getParameterTableHeaderRule()); } 
	 EOF 
;

// Rule ParameterTableHeader
ruleParameterTableHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getGroup()); }
(rule__ParameterTableHeader__Group__0)
{ after(grammarAccess.getParameterTableHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResultTableHeader
entryRuleResultTableHeader 
:
{ before(grammarAccess.getResultTableHeaderRule()); }
	 ruleResultTableHeader
{ after(grammarAccess.getResultTableHeaderRule()); } 
	 EOF 
;

// Rule ResultTableHeader
ruleResultTableHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResultTableHeaderAccess().getGroup()); }
(rule__ResultTableHeader__Group__0)
{ after(grammarAccess.getResultTableHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterTableValue
entryRuleParameterTableValue 
:
{ before(grammarAccess.getParameterTableValueRule()); }
	 ruleParameterTableValue
{ after(grammarAccess.getParameterTableValueRule()); } 
	 EOF 
;

// Rule ParameterTableValue
ruleParameterTableValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterTableValueAccess().getGroup()); }
(rule__ParameterTableValue__Group__0)
{ after(grammarAccess.getParameterTableValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedResult
entryRuleNamedResult 
:
{ before(grammarAccess.getNamedResultRule()); }
	 ruleNamedResult
{ after(grammarAccess.getNamedResultRule()); } 
	 EOF 
;

// Rule NamedResult
ruleNamedResult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedResultAccess().getGroup()); }
(rule__NamedResult__Group__0)
{ after(grammarAccess.getNamedResultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResultName
entryRuleResultName 
:
{ before(grammarAccess.getResultNameRule()); }
	 ruleResultName
{ after(grammarAccess.getResultNameRule()); } 
	 EOF 
;

// Rule ResultName
ruleResultName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResultNameAccess().getAlternatives()); }
(rule__ResultName__Alternatives)
{ after(grammarAccess.getResultNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFixedResultName
entryRuleFixedResultName 
:
{ before(grammarAccess.getFixedResultNameRule()); }
	 ruleFixedResultName
{ after(grammarAccess.getFixedResultNameRule()); } 
	 EOF 
;

// Rule FixedResultName
ruleFixedResultName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFixedResultNameAccess().getFieldAssignment()); }
(rule__FixedResultName__FieldAssignment)
{ after(grammarAccess.getFixedResultNameAccess().getFieldAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCall
entryRuleCall 
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallAccess().getGroup()); }
(rule__Call__Group__0)
{ after(grammarAccess.getCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedCallResult
entryRuleNamedCallResult 
:
{ before(grammarAccess.getNamedCallResultRule()); }
	 ruleNamedCallResult
{ after(grammarAccess.getNamedCallResultRule()); } 
	 EOF 
;

// Rule NamedCallResult
ruleNamedCallResult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedCallResultAccess().getGroup()); }
(rule__NamedCallResult__Group__0)
{ after(grammarAccess.getNamedCallResultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeSet
entryRuleTimeSet 
:
{ before(grammarAccess.getTimeSetRule()); }
	 ruleTimeSet
{ after(grammarAccess.getTimeSetRule()); } 
	 EOF 
;

// Rule TimeSet
ruleTimeSet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeSetAccess().getGroup()); }
(rule__TimeSet__Group__0)
{ after(grammarAccess.getTimeSetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeProgressionFactor
entryRuleTimeProgressionFactor 
:
{ before(grammarAccess.getTimeProgressionFactorRule()); }
	 ruleTimeProgressionFactor
{ after(grammarAccess.getTimeProgressionFactorRule()); } 
	 EOF 
;

// Rule TimeProgressionFactor
ruleTimeProgressionFactor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeProgressionFactorAccess().getAlternatives()); }
(rule__TimeProgressionFactor__Alternatives)
{ after(grammarAccess.getTimeProgressionFactorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeDifference
entryRuleTimeDifference 
:
{ before(grammarAccess.getTimeDifferenceRule()); }
	 ruleTimeDifference
{ after(grammarAccess.getTimeDifferenceRule()); } 
	 EOF 
;

// Rule TimeDifference
ruleTimeDifference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeDifferenceAccess().getGroup()); }
(rule__TimeDifference__Group__0)
{ after(grammarAccess.getTimeDifferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuite
entryRuleSuite 
:
{ before(grammarAccess.getSuiteRule()); }
	 ruleSuite
{ after(grammarAccess.getSuiteRule()); } 
	 EOF 
;

// Rule Suite
ruleSuite
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteAccess().getGroup()); }
(rule__Suite__Group__0)
{ after(grammarAccess.getSuiteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteParameter
entryRuleSuiteParameter 
:
{ before(grammarAccess.getSuiteParameterRule()); }
	 ruleSuiteParameter
{ after(grammarAccess.getSuiteParameterRule()); } 
	 EOF 
;

// Rule SuiteParameter
ruleSuiteParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteParameterAccess().getGroup()); }
(rule__SuiteParameter__Group__0)
{ after(grammarAccess.getSuiteParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteReturn
entryRuleSuiteReturn 
:
{ before(grammarAccess.getSuiteReturnRule()); }
	 ruleSuiteReturn
{ after(grammarAccess.getSuiteReturnRule()); } 
	 EOF 
;

// Rule SuiteReturn
ruleSuiteReturn
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteReturnAccess().getGroup()); }
(rule__SuiteReturn__Group__0)
{ after(grammarAccess.getSuiteReturnAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterName
entryRuleParameterName 
:
{ before(grammarAccess.getParameterNameRule()); }
	 ruleParameterName
{ after(grammarAccess.getParameterNameRule()); } 
	 EOF 
;

// Rule ParameterName
ruleParameterName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterNameAccess().getAlternatives()); }
(rule__ParameterName__Alternatives)
{ after(grammarAccess.getParameterNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFixedParameterName
entryRuleFixedParameterName 
:
{ before(grammarAccess.getFixedParameterNameRule()); }
	 ruleFixedParameterName
{ after(grammarAccess.getFixedParameterNameRule()); } 
	 EOF 
;

// Rule FixedParameterName
ruleFixedParameterName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFixedParameterNameAccess().getAnnotationAssignment()); }
(rule__FixedParameterName__AnnotationAssignment)
{ after(grammarAccess.getFixedParameterNameAccess().getAnnotationAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArbitraryParameterOrResultName
entryRuleArbitraryParameterOrResultName 
:
{ before(grammarAccess.getArbitraryParameterOrResultNameRule()); }
	 ruleArbitraryParameterOrResultName
{ after(grammarAccess.getArbitraryParameterOrResultNameRule()); } 
	 EOF 
;

// Rule ArbitraryParameterOrResultName
ruleArbitraryParameterOrResultName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getGroup()); }
(rule__ArbitraryParameterOrResultName__Group__0)
{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getAlternatives()); }
(rule__Operation__Alternatives)
{ after(grammarAccess.getOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStandardOperation
entryRuleStandardOperation 
:
{ before(grammarAccess.getStandardOperationRule()); }
	 ruleStandardOperation
{ after(grammarAccess.getStandardOperationRule()); } 
	 EOF 
;

// Rule StandardOperation
ruleStandardOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStandardOperationAccess().getGroup()); }
(rule__StandardOperation__Group__0)
{ after(grammarAccess.getStandardOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCustomOperation
entryRuleCustomOperation 
:
{ before(grammarAccess.getCustomOperationRule()); }
	 ruleCustomOperation
{ after(grammarAccess.getCustomOperationRule()); } 
	 EOF 
;

// Rule CustomOperation
ruleCustomOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCustomOperationAccess().getGroup()); }
(rule__CustomOperation__Group__0)
{ after(grammarAccess.getCustomOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueOrEnumValueOrOperationCollection
entryRuleValueOrEnumValueOrOperationCollection 
:
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionRule()); }
	 ruleValueOrEnumValueOrOperationCollection
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionRule()); } 
	 EOF 
;

// Rule ValueOrEnumValueOrOperationCollection
ruleValueOrEnumValueOrOperationCollection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getGroup()); }
(rule__ValueOrEnumValueOrOperationCollection__Group__0)
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueOrEnumValueOrOperation
entryRuleValueOrEnumValueOrOperation 
:
{ before(grammarAccess.getValueOrEnumValueOrOperationRule()); }
	 ruleValueOrEnumValueOrOperation
{ after(grammarAccess.getValueOrEnumValueOrOperationRule()); } 
	 EOF 
;

// Rule ValueOrEnumValueOrOperation
ruleValueOrEnumValueOrOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationAccess().getAlternatives()); }
(rule__ValueOrEnumValueOrOperation__Alternatives)
{ after(grammarAccess.getValueOrEnumValueOrOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantValue
entryRuleConstantValue 
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantValueAccess().getAlternatives()); }
(rule__ConstantValue__Alternatives)
{ after(grammarAccess.getConstantValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticValue
entryRuleStaticValue 
:
{ before(grammarAccess.getStaticValueRule()); }
	 ruleStaticValue
{ after(grammarAccess.getStaticValueRule()); } 
	 EOF 
;

// Rule StaticValue
ruleStaticValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticValueAccess().getAlternatives()); }
(rule__StaticValue__Alternatives)
{ after(grammarAccess.getStaticValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerValue
entryRuleIntegerValue 
:
{ before(grammarAccess.getIntegerValueRule()); }
	 ruleIntegerValue
{ after(grammarAccess.getIntegerValueRule()); } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerValueAccess().getIntegerValueAssignment()); }
(rule__IntegerValue__IntegerValueAssignment)
{ after(grammarAccess.getIntegerValueAccess().getIntegerValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecimalValue
entryRuleDecimalValue 
:
{ before(grammarAccess.getDecimalValueRule()); }
	 ruleDecimalValue
{ after(grammarAccess.getDecimalValueRule()); } 
	 EOF 
;

// Rule DecimalValue
ruleDecimalValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecimalValueAccess().getDecimalValueAssignment()); }
(rule__DecimalValue__DecimalValueAssignment)
{ after(grammarAccess.getDecimalValueAccess().getDecimalValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getStringValueAssignment()); }
(rule__StringValue__StringValueAssignment)
{ after(grammarAccess.getStringValueAccess().getStringValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegexValue
entryRuleRegexValue 
:
{ before(grammarAccess.getRegexValueRule()); }
	 ruleRegexValue
{ after(grammarAccess.getRegexValueRule()); } 
	 EOF 
;

// Rule RegexValue
ruleRegexValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegexValueAccess().getRegexValueAssignment()); }
(rule__RegexValue__RegexValueAssignment)
{ after(grammarAccess.getRegexValueAccess().getRegexValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getBooleanValueAssignment()); }
(rule__BooleanValue__BooleanValueAssignment)
{ after(grammarAccess.getBooleanValueAccess().getBooleanValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateValue
entryRuleDateValue 
:
{ before(grammarAccess.getDateValueRule()); }
	 ruleDateValue
{ after(grammarAccess.getDateValueRule()); } 
	 EOF 
;

// Rule DateValue
ruleDateValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateValueAccess().getAlternatives()); }
(rule__DateValue__Alternatives)
{ after(grammarAccess.getDateValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsoDateValue
entryRuleIsoDateValue 
:
{ before(grammarAccess.getIsoDateValueRule()); }
	 ruleIsoDateValue
{ after(grammarAccess.getIsoDateValueRule()); } 
	 EOF 
;

// Rule IsoDateValue
ruleIsoDateValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsoDateValueAccess().getDateValueAssignment()); }
(rule__IsoDateValue__DateValueAssignment)
{ after(grammarAccess.getIsoDateValueAccess().getDateValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEuropeanDateValue
entryRuleEuropeanDateValue 
:
{ before(grammarAccess.getEuropeanDateValueRule()); }
	 ruleEuropeanDateValue
{ after(grammarAccess.getEuropeanDateValueRule()); } 
	 EOF 
;

// Rule EuropeanDateValue
ruleEuropeanDateValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEuropeanDateValueAccess().getDateValueAssignment()); }
(rule__EuropeanDateValue__DateValueAssignment)
{ after(grammarAccess.getEuropeanDateValueAccess().getDateValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUSDateValue
entryRuleUSDateValue 
:
{ before(grammarAccess.getUSDateValueRule()); }
	 ruleUSDateValue
{ after(grammarAccess.getUSDateValueRule()); } 
	 EOF 
;

// Rule USDateValue
ruleUSDateValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUSDateValueAccess().getDateValueAssignment()); }
(rule__USDateValue__DateValueAssignment)
{ after(grammarAccess.getUSDateValueAccess().getDateValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeValue
entryRuleTimeValue 
:
{ before(grammarAccess.getTimeValueRule()); }
	 ruleTimeValue
{ after(grammarAccess.getTimeValueRule()); } 
	 EOF 
;

// Rule TimeValue
ruleTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeValueAccess().getAlternatives()); }
(rule__TimeValue__Alternatives)
{ after(grammarAccess.getTimeValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsoTimeValue
entryRuleIsoTimeValue 
:
{ before(grammarAccess.getIsoTimeValueRule()); }
	 ruleIsoTimeValue
{ after(grammarAccess.getIsoTimeValueRule()); } 
	 EOF 
;

// Rule IsoTimeValue
ruleIsoTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsoTimeValueAccess().getTimeValueAssignment()); }
(rule__IsoTimeValue__TimeValueAssignment)
{ after(grammarAccess.getIsoTimeValueAccess().getTimeValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimple24HrsTimeValue
entryRuleSimple24HrsTimeValue 
:
{ before(grammarAccess.getSimple24HrsTimeValueRule()); }
	 ruleSimple24HrsTimeValue
{ after(grammarAccess.getSimple24HrsTimeValueRule()); } 
	 EOF 
;

// Rule Simple24HrsTimeValue
ruleSimple24HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple24HrsTimeValueAccess().getTimeValueAssignment()); }
(rule__Simple24HrsTimeValue__TimeValueAssignment)
{ after(grammarAccess.getSimple24HrsTimeValueAccess().getTimeValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimple12HrsTimeValue
entryRuleSimple12HrsTimeValue 
:
{ before(grammarAccess.getSimple12HrsTimeValueRule()); }
	 ruleSimple12HrsTimeValue
{ after(grammarAccess.getSimple12HrsTimeValueRule()); } 
	 EOF 
;

// Rule Simple12HrsTimeValue
ruleSimple12HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple12HrsTimeValueAccess().getTimeValueAssignment()); }
(rule__Simple12HrsTimeValue__TimeValueAssignment)
{ after(grammarAccess.getSimple12HrsTimeValueAccess().getTimeValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateAndTimeValue
entryRuleDateAndTimeValue 
:
{ before(grammarAccess.getDateAndTimeValueRule()); }
	 ruleDateAndTimeValue
{ after(grammarAccess.getDateAndTimeValueRule()); } 
	 EOF 
;

// Rule DateAndTimeValue
ruleDateAndTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateAndTimeValueAccess().getAlternatives()); }
(rule__DateAndTimeValue__Alternatives)
{ after(grammarAccess.getDateAndTimeValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsoDateAndTimeValue
entryRuleIsoDateAndTimeValue 
:
{ before(grammarAccess.getIsoDateAndTimeValueRule()); }
	 ruleIsoDateAndTimeValue
{ after(grammarAccess.getIsoDateAndTimeValueRule()); } 
	 EOF 
;

// Rule IsoDateAndTimeValue
ruleIsoDateAndTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getGroup()); }
(rule__IsoDateAndTimeValue__Group__0)
{ after(grammarAccess.getIsoDateAndTimeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEuropeanDateAnd24HrsTimeValue
entryRuleEuropeanDateAnd24HrsTimeValue 
:
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueRule()); }
	 ruleEuropeanDateAnd24HrsTimeValue
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueRule()); } 
	 EOF 
;

// Rule EuropeanDateAnd24HrsTimeValue
ruleEuropeanDateAnd24HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getGroup()); }
(rule__EuropeanDateAnd24HrsTimeValue__Group__0)
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEuropeanDateAnd12HrsTimeValue
entryRuleEuropeanDateAnd12HrsTimeValue 
:
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueRule()); }
	 ruleEuropeanDateAnd12HrsTimeValue
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueRule()); } 
	 EOF 
;

// Rule EuropeanDateAnd12HrsTimeValue
ruleEuropeanDateAnd12HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getGroup()); }
(rule__EuropeanDateAnd12HrsTimeValue__Group__0)
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUSDateAnd12HrsTimeValue
entryRuleUSDateAnd12HrsTimeValue 
:
{ before(grammarAccess.getUSDateAnd12HrsTimeValueRule()); }
	 ruleUSDateAnd12HrsTimeValue
{ after(grammarAccess.getUSDateAnd12HrsTimeValueRule()); } 
	 EOF 
;

// Rule USDateAnd12HrsTimeValue
ruleUSDateAnd12HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getGroup()); }
(rule__USDateAnd12HrsTimeValue__Group__0)
{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJavaConstantValue
entryRuleJavaConstantValue 
:
{ before(grammarAccess.getJavaConstantValueRule()); }
	 ruleJavaConstantValue
{ after(grammarAccess.getJavaConstantValueRule()); } 
	 EOF 
;

// Rule JavaConstantValue
ruleJavaConstantValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaConstantValueAccess().getGroup()); }
(rule__JavaConstantValue__Group__0)
{ after(grammarAccess.getJavaConstantValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableVariable
entryRuleVariableVariable 
:
{ before(grammarAccess.getVariableVariableRule()); }
	 ruleVariableVariable
{ after(grammarAccess.getVariableVariableRule()); } 
	 EOF 
;

// Rule VariableVariable
ruleVariableVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableVariableAccess().getNameAssignment()); }
(rule__VariableVariable__NameAssignment)
{ after(grammarAccess.getVariableVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment()); }
(rule__Constant__NameAssignment)
{ after(grammarAccess.getConstantAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullValue
entryRuleNullValue 
:
{ before(grammarAccess.getNullValueRule()); }
	 ruleNullValue
{ after(grammarAccess.getNullValueRule()); } 
	 EOF 
;

// Rule NullValue
ruleNullValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullValueAccess().getGroup()); }
(rule__NullValue__Group__0)
{ after(grammarAccess.getNullValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInexistentValue
entryRuleInexistentValue 
:
{ before(grammarAccess.getInexistentValueRule()); }
	 ruleInexistentValue
{ after(grammarAccess.getInexistentValueRule()); } 
	 EOF 
;

// Rule InexistentValue
ruleInexistentValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInexistentValueAccess().getGroup()); }
(rule__InexistentValue__Group__0)
{ after(grammarAccess.getInexistentValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmptyValue
entryRuleEmptyValue 
:
{ before(grammarAccess.getEmptyValueRule()); }
	 ruleEmptyValue
{ after(grammarAccess.getEmptyValueRule()); } 
	 EOF 
;

// Rule EmptyValue
ruleEmptyValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmptyValueAccess().getGroup()); }
(rule__EmptyValue__Group__0)
{ after(grammarAccess.getEmptyValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumValue
entryRuleEnumValue 
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumValueAccess().getEnumValueAssignment()); }
(rule__EnumValue__EnumValueAssignment)
{ after(grammarAccess.getEnumValueAccess().getEnumValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedObject
entryRuleNestedObject 
:
{ before(grammarAccess.getNestedObjectRule()); }
	 ruleNestedObject
{ after(grammarAccess.getNestedObjectRule()); } 
	 EOF 
;

// Rule NestedObject
ruleNestedObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNestedObjectAccess().getGroup()); }
(rule__NestedObject__Group__0)
{ after(grammarAccess.getNestedObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedNestedObject
entryRuleTypedNestedObject 
:
{ before(grammarAccess.getTypedNestedObjectRule()); }
	 ruleTypedNestedObject
{ after(grammarAccess.getTypedNestedObjectRule()); } 
	 EOF 
;

// Rule TypedNestedObject
ruleTypedNestedObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedNestedObjectAccess().getGroup()); }
(rule__TypedNestedObject__Group__0)
{ after(grammarAccess.getTypedNestedObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair 
:
{ before(grammarAccess.getKeyValuePairRule()); }
	 ruleKeyValuePair
{ after(grammarAccess.getKeyValuePairRule()); } 
	 EOF 
;

// Rule KeyValuePair
ruleKeyValuePair
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyValuePairAccess().getGroup()); }
(rule__KeyValuePair__Group__0)
{ after(grammarAccess.getKeyValuePairAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJavaClassReference
entryRuleJavaClassReference 
:
{ before(grammarAccess.getJavaClassReferenceRule()); }
	 ruleJavaClassReference
{ after(grammarAccess.getJavaClassReferenceRule()); } 
	 EOF 
;

// Rule JavaClassReference
ruleJavaClassReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaClassReferenceAccess().getTypeAssignment()); }
(rule__JavaClassReference__TypeAssignment)
{ after(grammarAccess.getJavaClassReferenceAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodReference
entryRuleMethodReference 
:
{ before(grammarAccess.getMethodReferenceRule()); }
	 ruleMethodReference
{ after(grammarAccess.getMethodReferenceRule()); } 
	 EOF 
;

// Rule MethodReference
ruleMethodReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodReferenceAccess().getGroup()); }
(rule__MethodReference__Group__0)
{ after(grammarAccess.getMethodReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJavaConstantReference
entryRuleJavaConstantReference 
:
{ before(grammarAccess.getJavaConstantReferenceRule()); }
	 ruleJavaConstantReference
{ after(grammarAccess.getJavaConstantReferenceRule()); } 
	 EOF 
;

// Rule JavaConstantReference
ruleJavaConstantReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaConstantReferenceAccess().getGroup()); }
(rule__JavaConstantReference__Group__0)
{ after(grammarAccess.getJavaConstantReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecutionMultiplier
entryRuleExecutionMultiplier 
:
{ before(grammarAccess.getExecutionMultiplierRule()); }
	 ruleExecutionMultiplier
{ after(grammarAccess.getExecutionMultiplierRule()); } 
	 EOF 
;

// Rule ExecutionMultiplier
ruleExecutionMultiplier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecutionMultiplierAccess().getGroup()); }
(rule__ExecutionMultiplier__Group__0)
{ after(grammarAccess.getExecutionMultiplierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedJavaClassName
entryRuleQualifiedJavaClassName 
:
{ before(grammarAccess.getQualifiedJavaClassNameRule()); }
	 ruleQualifiedJavaClassName
{ after(grammarAccess.getQualifiedJavaClassNameRule()); } 
	 EOF 
;

// Rule QualifiedJavaClassName
ruleQualifiedJavaClassName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedJavaClassNameAccess().getGroup()); }
(rule__QualifiedJavaClassName__Group__0)
{ after(grammarAccess.getQualifiedJavaClassNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDocumentationComment
entryRuleDocumentationComment 
:
{ before(grammarAccess.getDocumentationCommentRule()); }
	 ruleDocumentationComment
{ after(grammarAccess.getDocumentationCommentRule()); } 
	 EOF 
;

// Rule DocumentationComment
ruleDocumentationComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDocumentationCommentAccess().getGroup()); }
(rule__DocumentationComment__Group__0)
{ after(grammarAccess.getDocumentationCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNL
entryRuleNL 
:
{ before(grammarAccess.getNLRule()); }
	 ruleNL
{ after(grammarAccess.getNLRule()); } 
	 EOF 
;

// Rule NL
ruleNL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNLAccess().getGroup()); }
(rule__NL__Group__0)*
{ after(grammarAccess.getNLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNLFORCED
entryRuleNLFORCED 
:
{ before(grammarAccess.getNLFORCEDRule()); }
	 ruleNLFORCED
{ after(grammarAccess.getNLFORCEDRule()); } 
	 EOF 
;

// Rule NLFORCED
ruleNLFORCED
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNLFORCEDAccess().getGroup()); }
(rule__NLFORCED__Group__0)
{ after(grammarAccess.getNLFORCEDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getPackageDefinitionParserRuleCall_0()); }
	rulePackageDefinition
{ after(grammarAccess.getStatementAccess().getPackageDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForkDefinitionParserRuleCall_1()); }
	ruleForkDefinition
{ after(grammarAccess.getStatementAccess().getForkDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getVariantDefinitionParserRuleCall_2()); }
	ruleVariantDefinition
{ after(grammarAccess.getStatementAccess().getVariantDefinitionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleComment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleCommentAccess().getVisibleSingleLineCommentParserRuleCall_0()); }
	ruleVisibleSingleLineComment
{ after(grammarAccess.getVisibleCommentAccess().getVisibleSingleLineCommentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVisibleCommentAccess().getVisibleMultiLineCommentParserRuleCall_1()); }
	ruleVisibleMultiLineComment
{ after(grammarAccess.getVisibleCommentAccess().getVisibleMultiLineCommentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineComment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineCommentAccess().getVisibleSingleLineNormalCommentParserRuleCall_0()); }
	ruleVisibleSingleLineNormalComment
{ after(grammarAccess.getVisibleSingleLineCommentAccess().getVisibleSingleLineNormalCommentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVisibleSingleLineCommentAccess().getVisibleSingleLineTitleCommentParserRuleCall_1()); }
	ruleVisibleSingleLineTitleComment
{ after(grammarAccess.getVisibleSingleLineCommentAccess().getVisibleSingleLineTitleCommentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineComment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineCommentAccess().getVisibleMultiLineNormalCommentParserRuleCall_0()); }
	ruleVisibleMultiLineNormalComment
{ after(grammarAccess.getVisibleMultiLineCommentAccess().getVisibleMultiLineNormalCommentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVisibleMultiLineCommentAccess().getVisibleMultiLineTitleCommentParserRuleCall_1()); }
	ruleVisibleMultiLineTitleComment
{ after(grammarAccess.getVisibleMultiLineCommentAccess().getVisibleMultiLineTitleCommentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageStatementAccess().getForkDefinitionParserRuleCall_0()); }
	ruleForkDefinition
{ after(grammarAccess.getPackageStatementAccess().getForkDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getVariantDefinitionParserRuleCall_1()); }
	ruleVariantDefinition
{ after(grammarAccess.getPackageStatementAccess().getVariantDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getTestDefinitionParserRuleCall_2()); }
	ruleTestDefinition
{ after(grammarAccess.getPackageStatementAccess().getTestDefinitionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getCallDefinitionParserRuleCall_3()); }
	ruleCallDefinition
{ after(grammarAccess.getPackageStatementAccess().getCallDefinitionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getOperationDefinitionParserRuleCall_4()); }
	ruleOperationDefinition
{ after(grammarAccess.getPackageStatementAccess().getOperationDefinitionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getSuiteDefinitionParserRuleCall_5()); }
	ruleSuiteDefinition
{ after(grammarAccess.getPackageStatementAccess().getSuiteDefinitionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getVariableDefinitionParserRuleCall_6()); }
	ruleVariableDefinition
{ after(grammarAccess.getPackageStatementAccess().getVariableDefinitionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getConstantDefinitionParserRuleCall_7()); }
	ruleConstantDefinition
{ after(grammarAccess.getPackageStatementAccess().getConstantDefinitionParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Alternatives_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getGroup_7_0_0()); }
(rule__ForkDefinition__Group_7_0_0__0)
{ after(grammarAccess.getForkDefinitionAccess().getGroup_7_0_0()); }
)

    |(
{ before(grammarAccess.getForkDefinitionAccess().getGroup_7_0_1()); }
(rule__ForkDefinition__Group_7_0_1__0)
{ after(grammarAccess.getForkDefinitionAccess().getGroup_7_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteStatementAccess().getSuiteStatementWithResultParserRuleCall_0()); }
	ruleSuiteStatementWithResult
{ after(grammarAccess.getSuiteStatementAccess().getSuiteStatementWithResultParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSuiteStatementAccess().getVariableDefinitionParserRuleCall_1()); }
	ruleVariableDefinition
{ after(grammarAccess.getSuiteStatementAccess().getVariableDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSuiteStatementAccess().getConstantDefinitionParserRuleCall_2()); }
	ruleConstantDefinition
{ after(grammarAccess.getSuiteStatementAccess().getConstantDefinitionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSuiteStatementAccess().getVariableAssignmentParserRuleCall_3()); }
	ruleVariableAssignment
{ after(grammarAccess.getSuiteStatementAccess().getVariableAssignmentParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSuiteStatementAccess().getVisibleCommentParserRuleCall_4()); }
	ruleVisibleComment
{ after(grammarAccess.getSuiteStatementAccess().getVisibleCommentParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getSuiteStatementAccess().getVisibleDividerParserRuleCall_5()); }
	ruleVisibleDivider
{ after(grammarAccess.getSuiteStatementAccess().getVisibleDividerParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteStatementWithResult__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getSuiteParserRuleCall_0()); }
	ruleSuite
{ after(grammarAccess.getSuiteStatementWithResultAccess().getSuiteParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getTestParserRuleCall_1()); }
	ruleTest
{ after(grammarAccess.getSuiteStatementWithResultAccess().getTestParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getTableTestParserRuleCall_2()); }
	ruleTableTest
{ after(grammarAccess.getSuiteStatementWithResultAccess().getTableTestParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getCallParserRuleCall_3()); }
	ruleCall
{ after(grammarAccess.getSuiteStatementWithResultAccess().getCallParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getTimeSetParserRuleCall_4()); }
	ruleTimeSet
{ after(grammarAccess.getSuiteStatementWithResultAccess().getTimeSetParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultNameAccess().getFixedResultNameParserRuleCall_0()); }
	ruleFixedResultName
{ after(grammarAccess.getResultNameAccess().getFixedResultNameParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getResultNameAccess().getArbitraryParameterOrResultNameParserRuleCall_1()); }
	ruleArbitraryParameterOrResultName
{ after(grammarAccess.getResultNameAccess().getArbitraryParameterOrResultNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getGroup_2_0()); }
(rule__TimeSet__Group_2_0__0)
{ after(grammarAccess.getTimeSetAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getTimeSetAccess().getGroup_2_1()); }
(rule__TimeSet__Group_2_1__0)
{ after(grammarAccess.getTimeSetAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Alternatives_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getStartTimeAssignment_2_1_0_0()); }
(rule__TimeSet__StartTimeAssignment_2_1_0_0)
{ after(grammarAccess.getTimeSetAccess().getStartTimeAssignment_2_1_0_0()); }
)

    |(
{ before(grammarAccess.getTimeSetAccess().getDiffTimeAssignment_2_1_0_1()); }
(rule__TimeSet__DiffTimeAssignment_2_1_0_1)
{ after(grammarAccess.getTimeSetAccess().getDiffTimeAssignment_2_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Alternatives_3_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getForksAssignment_3_2_0_0()); }
(rule__TimeSet__ForksAssignment_3_2_0_0)
{ after(grammarAccess.getTimeSetAccess().getForksAssignment_3_2_0_0()); }
)

    |(
{ before(grammarAccess.getTimeSetAccess().getMasterForkAssignment_3_2_0_1()); }
(rule__TimeSet__MasterForkAssignment_3_2_0_1)
{ after(grammarAccess.getTimeSetAccess().getMasterForkAssignment_3_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeProgressionFactor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeProgressionFactorAccess().getFixedValueAssignment_0()); }
(rule__TimeProgressionFactor__FixedValueAssignment_0)
{ after(grammarAccess.getTimeProgressionFactorAccess().getFixedValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getTimeProgressionFactorAccess().getCalculatedValueAssignment_1()); }
(rule__TimeProgressionFactor__CalculatedValueAssignment_1)
{ after(grammarAccess.getTimeProgressionFactorAccess().getCalculatedValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeProgressionFactor__CalculatedValueAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeProgressionFactorAccess().getCalculatedValueVariableParserRuleCall_1_0_0()); }
	ruleVariable
{ after(grammarAccess.getTimeProgressionFactorAccess().getCalculatedValueVariableParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getTimeProgressionFactorAccess().getCalculatedValueOperationParserRuleCall_1_0_1()); }
	ruleOperation
{ after(grammarAccess.getTimeProgressionFactorAccess().getCalculatedValueOperationParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__DirectionAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getDirectionPlusSignKeyword_0_0_0()); }

	'+' 

{ after(grammarAccess.getTimeDifferenceAccess().getDirectionPlusSignKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getTimeDifferenceAccess().getDirectionHyphenMinusKeyword_0_0_1()); }

	'-' 

{ after(grammarAccess.getTimeDifferenceAccess().getDirectionHyphenMinusKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTimeDifferenceAccess().getGroup_1_0()); }
(rule__TimeDifference__Group_1_0__0)
{ after(grammarAccess.getTimeDifferenceAccess().getGroup_1_0()); }
)
(
{ before(grammarAccess.getTimeDifferenceAccess().getGroup_1_0()); }
(rule__TimeDifference__Group_1_0__0)*
{ after(grammarAccess.getTimeDifferenceAccess().getGroup_1_0()); }
)
)

    |(
{ before(grammarAccess.getTimeDifferenceAccess().getGroup_1_1()); }
(rule__TimeDifference__Group_1_1__0)
{ after(grammarAccess.getTimeDifferenceAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__CalculatedValueAlternatives_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getCalculatedValueVariableParserRuleCall_1_1_1_0_0()); }
	ruleVariable
{ after(grammarAccess.getTimeDifferenceAccess().getCalculatedValueVariableParserRuleCall_1_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getTimeDifferenceAccess().getCalculatedValueOperationParserRuleCall_1_1_1_0_1()); }
	ruleOperation
{ after(grammarAccess.getTimeDifferenceAccess().getCalculatedValueOperationParserRuleCall_1_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterNameAccess().getFixedParameterNameParserRuleCall_0()); }
	ruleFixedParameterName
{ after(grammarAccess.getParameterNameAccess().getFixedParameterNameParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParameterNameAccess().getArbitraryParameterOrResultNameParserRuleCall_1()); }
	ruleArbitraryParameterOrResultName
{ after(grammarAccess.getParameterNameAccess().getArbitraryParameterOrResultNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArbitraryParameterOrResultName__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getIdentifierAssignment_1_0()); }
(rule__ArbitraryParameterOrResultName__IdentifierAssignment_1_0)
{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getIdentifierAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getStringIdentifierAssignment_1_1()); }
(rule__ArbitraryParameterOrResultName__StringIdentifierAssignment_1_1)
{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getStringIdentifierAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getStandardOperationParserRuleCall_0()); }
	ruleStandardOperation
{ after(grammarAccess.getOperationAccess().getStandardOperationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getCustomOperationParserRuleCall_1()); }
	ruleCustomOperation
{ after(grammarAccess.getOperationAccess().getCustomOperationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__OperatorsAlternatives_4_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsPlusSignKeyword_4_0_0_0()); }

	'+' 

{ after(grammarAccess.getStandardOperationAccess().getOperatorsPlusSignKeyword_4_0_0_0()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsHyphenMinusKeyword_4_0_0_1()); }

	'-' 

{ after(grammarAccess.getStandardOperationAccess().getOperatorsHyphenMinusKeyword_4_0_0_1()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsAsteriskKeyword_4_0_0_2()); }

	'*' 

{ after(grammarAccess.getStandardOperationAccess().getOperatorsAsteriskKeyword_4_0_0_2()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsSolidusKeyword_4_0_0_3()); }

	'/' 

{ after(grammarAccess.getStandardOperationAccess().getOperatorsSolidusKeyword_4_0_0_3()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsPercentSignKeyword_4_0_0_4()); }

	'%' 

{ after(grammarAccess.getStandardOperationAccess().getOperatorsPercentSignKeyword_4_0_0_4()); }
)

    |(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsFullStopFullStopKeyword_4_0_0_5()); }

	'..' 

{ after(grammarAccess.getStandardOperationAccess().getOperatorsFullStopFullStopKeyword_4_0_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationAccess().getValueParserRuleCall_0()); }
	ruleValue
{ after(grammarAccess.getValueOrEnumValueOrOperationAccess().getValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueOrEnumValueOrOperationAccess().getEnumValueParserRuleCall_1()); }
	ruleEnumValue
{ after(grammarAccess.getValueOrEnumValueOrOperationAccess().getEnumValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueOrEnumValueOrOperationAccess().getOperationParserRuleCall_2()); }
	ruleOperation
{ after(grammarAccess.getValueOrEnumValueOrOperationAccess().getOperationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStaticValueParserRuleCall_0()); }
	ruleStaticValue
{ after(grammarAccess.getValueAccess().getStaticValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getVariableParserRuleCall_1()); }
	ruleVariable
{ after(grammarAccess.getValueAccess().getVariableParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getNestedObjectParserRuleCall_2()); }
	ruleNestedObject
{ after(grammarAccess.getValueAccess().getNestedObjectParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getTypedNestedObjectParserRuleCall_3()); }
	ruleTypedNestedObject
{ after(grammarAccess.getValueAccess().getTypedNestedObjectParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getStaticValueParserRuleCall_0()); }
	ruleStaticValue
{ after(grammarAccess.getConstantValueAccess().getStaticValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getConstantParserRuleCall_1()); }
	ruleConstant
{ after(grammarAccess.getConstantValueAccess().getConstantParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticValueAccess().getStringValueParserRuleCall_0()); }
	ruleStringValue
{ after(grammarAccess.getStaticValueAccess().getStringValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getRegexValueParserRuleCall_1()); }
	ruleRegexValue
{ after(grammarAccess.getStaticValueAccess().getRegexValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getIntegerValueParserRuleCall_2()); }
	ruleIntegerValue
{ after(grammarAccess.getStaticValueAccess().getIntegerValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getDecimalValueParserRuleCall_3()); }
	ruleDecimalValue
{ after(grammarAccess.getStaticValueAccess().getDecimalValueParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getBooleanValueParserRuleCall_4()); }
	ruleBooleanValue
{ after(grammarAccess.getStaticValueAccess().getBooleanValueParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getDateValueParserRuleCall_5()); }
	ruleDateValue
{ after(grammarAccess.getStaticValueAccess().getDateValueParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getTimeValueParserRuleCall_6()); }
	ruleTimeValue
{ after(grammarAccess.getStaticValueAccess().getTimeValueParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getDateAndTimeValueParserRuleCall_7()); }
	ruleDateAndTimeValue
{ after(grammarAccess.getStaticValueAccess().getDateAndTimeValueParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getNullValueParserRuleCall_8()); }
	ruleNullValue
{ after(grammarAccess.getStaticValueAccess().getNullValueParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getInexistentValueParserRuleCall_9()); }
	ruleInexistentValue
{ after(grammarAccess.getStaticValueAccess().getInexistentValueParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getEmptyValueParserRuleCall_10()); }
	ruleEmptyValue
{ after(grammarAccess.getStaticValueAccess().getEmptyValueParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getJavaConstantValueParserRuleCall_11()); }
	ruleJavaConstantValue
{ after(grammarAccess.getStaticValueAccess().getJavaConstantValueParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__BooleanValueAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getBooleanValueBOOLEAN_TRUETerminalRuleCall_0_0()); }
	RULE_BOOLEAN_TRUE
{ after(grammarAccess.getBooleanValueAccess().getBooleanValueBOOLEAN_TRUETerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanValueAccess().getBooleanValueBOOLEAN_FALSETerminalRuleCall_0_1()); }
	RULE_BOOLEAN_FALSE
{ after(grammarAccess.getBooleanValueAccess().getBooleanValueBOOLEAN_FALSETerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateValueAccess().getIsoDateValueParserRuleCall_0()); }
	ruleIsoDateValue
{ after(grammarAccess.getDateValueAccess().getIsoDateValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDateValueAccess().getEuropeanDateValueParserRuleCall_1()); }
	ruleEuropeanDateValue
{ after(grammarAccess.getDateValueAccess().getEuropeanDateValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDateValueAccess().getUSDateValueParserRuleCall_2()); }
	ruleUSDateValue
{ after(grammarAccess.getDateValueAccess().getUSDateValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeValueAccess().getIsoTimeValueParserRuleCall_0()); }
	ruleIsoTimeValue
{ after(grammarAccess.getTimeValueAccess().getIsoTimeValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTimeValueAccess().getSimple24HrsTimeValueParserRuleCall_1()); }
	ruleSimple24HrsTimeValue
{ after(grammarAccess.getTimeValueAccess().getSimple24HrsTimeValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTimeValueAccess().getSimple12HrsTimeValueParserRuleCall_2()); }
	ruleSimple12HrsTimeValue
{ after(grammarAccess.getTimeValueAccess().getSimple12HrsTimeValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeValueAccess().getIsoDateAndTimeValueParserRuleCall_0()); }
	ruleIsoDateAndTimeValue
{ after(grammarAccess.getDateAndTimeValueAccess().getIsoDateAndTimeValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDateAndTimeValueAccess().getEuropeanDateAnd24HrsTimeValueParserRuleCall_1()); }
	ruleEuropeanDateAnd24HrsTimeValue
{ after(grammarAccess.getDateAndTimeValueAccess().getEuropeanDateAnd24HrsTimeValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDateAndTimeValueAccess().getEuropeanDateAnd12HrsTimeValueParserRuleCall_2()); }
	ruleEuropeanDateAnd12HrsTimeValue
{ after(grammarAccess.getDateAndTimeValueAccess().getEuropeanDateAnd12HrsTimeValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDateAndTimeValueAccess().getUSDateAnd12HrsTimeValueParserRuleCall_3()); }
	ruleUSDateAnd12HrsTimeValue
{ after(grammarAccess.getDateAndTimeValueAccess().getUSDateAnd12HrsTimeValueParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getIdentifierAssignment_0_0()); }
(rule__KeyValuePair__IdentifierAssignment_0_0)
{ after(grammarAccess.getKeyValuePairAccess().getIdentifierAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getKeyValuePairAccess().getStringIdentifierAssignment_0_1()); }
(rule__KeyValuePair__StringIdentifierAssignment_0_1)
{ after(grammarAccess.getKeyValuePairAccess().getStringIdentifierAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getModelAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_2()); }
(rule__Model__Group_2__0)*
{ after(grammarAccess.getModelAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsAssignment_3()); }
(rule__Model__StatementsAssignment_3)*
{ after(grammarAccess.getModelAccess().getStatementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Model__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_2__0__Impl
	rule__Model__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_2_0()); }
(rule__Model__ImportsAssignment_2_0)
{ after(grammarAccess.getModelAccess().getImportsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getModelAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VisibleSingleLineNormalComment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleSingleLineNormalComment__Group__0__Impl
	rule__VisibleSingleLineNormalComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineNormalComment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineNormalCommentAccess().getContentAssignment_0()); }
(rule__VisibleSingleLineNormalComment__ContentAssignment_0)
{ after(grammarAccess.getVisibleSingleLineNormalCommentAccess().getContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VisibleSingleLineNormalComment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleSingleLineNormalComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineNormalComment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineNormalCommentAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVisibleSingleLineNormalCommentAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VisibleSingleLineTitleComment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleSingleLineTitleComment__Group__0__Impl
	rule__VisibleSingleLineTitleComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineTitleComment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineTitleCommentAccess().getContentAssignment_0()); }
(rule__VisibleSingleLineTitleComment__ContentAssignment_0)
{ after(grammarAccess.getVisibleSingleLineTitleCommentAccess().getContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VisibleSingleLineTitleComment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleSingleLineTitleComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineTitleComment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineTitleCommentAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVisibleSingleLineTitleCommentAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VisibleMultiLineNormalComment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleMultiLineNormalComment__Group__0__Impl
	rule__VisibleMultiLineNormalComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineNormalComment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineNormalCommentAccess().getContentAssignment_0()); }
(rule__VisibleMultiLineNormalComment__ContentAssignment_0)
{ after(grammarAccess.getVisibleMultiLineNormalCommentAccess().getContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VisibleMultiLineNormalComment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleMultiLineNormalComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineNormalComment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineNormalCommentAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVisibleMultiLineNormalCommentAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VisibleMultiLineTitleComment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleMultiLineTitleComment__Group__0__Impl
	rule__VisibleMultiLineTitleComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineTitleComment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineTitleCommentAccess().getContentAssignment_0()); }
(rule__VisibleMultiLineTitleComment__ContentAssignment_0)
{ after(grammarAccess.getVisibleMultiLineTitleCommentAccess().getContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VisibleMultiLineTitleComment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleMultiLineTitleComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineTitleComment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineTitleCommentAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVisibleMultiLineTitleCommentAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VisibleDivider__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleDivider__Group__0__Impl
	rule__VisibleDivider__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleDivider__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleDividerAccess().getContentAssignment_0()); }
(rule__VisibleDivider__ContentAssignment_0)
{ after(grammarAccess.getVisibleDividerAccess().getContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VisibleDivider__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleDivider__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleDivider__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleDividerAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVisibleDividerAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__0__Impl
	rule__PackageDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getDocumentationAssignment_0()); }
(rule__PackageDefinition__DocumentationAssignment_0)?
{ after(grammarAccess.getPackageDefinitionAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__1__Impl
	rule__PackageDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getPackagedefKeyword_1()); }

	'packagedef' 

{ after(grammarAccess.getPackageDefinitionAccess().getPackagedefKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__2__Impl
	rule__PackageDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_2()); }
	ruleNL
{ after(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__3__Impl
	rule__PackageDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNameAssignment_3()); }
(rule__PackageDefinition__NameAssignment_3)
{ after(grammarAccess.getPackageDefinitionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__4__Impl
	rule__PackageDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getWithKeyword_4()); }

	'with' 

{ after(grammarAccess.getPackageDefinitionAccess().getWithKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__5__Impl
	rule__PackageDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__6__Impl
	rule__PackageDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getStatementsAssignment_6()); }
(rule__PackageDefinition__StatementsAssignment_6)*
{ after(grammarAccess.getPackageDefinitionAccess().getStatementsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__7__Impl
	rule__PackageDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getPackageendKeyword_7()); }

	'packageend' 

{ after(grammarAccess.getPackageDefinitionAccess().getPackageendKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_8()); }
	ruleNL
{ after(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getImportAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_2()); }
(rule__Import__ImportedNamespaceAssignment_2)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForkDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__0__Impl
	rule__ForkDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getDocumentationAssignment_0()); }
(rule__ForkDefinition__DocumentationAssignment_0)?
{ after(grammarAccess.getForkDefinitionAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__1__Impl
	rule__ForkDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getPrivateAssignment_1()); }
(rule__ForkDefinition__PrivateAssignment_1)?
{ after(grammarAccess.getForkDefinitionAccess().getPrivateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__2__Impl
	rule__ForkDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getForkdefKeyword_2()); }

	'forkdef' 

{ after(grammarAccess.getForkDefinitionAccess().getForkdefKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__3__Impl
	rule__ForkDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__4__Impl
	rule__ForkDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNameAssignment_4()); }
(rule__ForkDefinition__NameAssignment_4)
{ after(grammarAccess.getForkDefinitionAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__5__Impl
	rule__ForkDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__6__Impl
	rule__ForkDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getGroup_6()); }
(rule__ForkDefinition__Group_6__0)?
{ after(grammarAccess.getForkDefinitionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__7__Impl
	rule__ForkDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getGroup_7()); }
(rule__ForkDefinition__Group_7__0)?
{ after(grammarAccess.getForkDefinitionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getGroup_8()); }
(rule__ForkDefinition__Group_8__0)*
{ after(grammarAccess.getForkDefinitionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ForkDefinition__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_6__0__Impl
	rule__ForkDefinition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getDescriptionAssignment_6_0()); }
(rule__ForkDefinition__DescriptionAssignment_6_0)
{ after(grammarAccess.getForkDefinitionAccess().getDescriptionAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_6_1()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForkDefinition__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_7__0__Impl
	rule__ForkDefinition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getAlternatives_7_0()); }
(rule__ForkDefinition__Alternatives_7_0)
{ after(grammarAccess.getForkDefinitionAccess().getAlternatives_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_7_1()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForkDefinition__Group_7_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_7_0_0__0__Impl
	rule__ForkDefinition__Group_7_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_7_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getUsesKeyword_7_0_0_0()); }

	'uses' 

{ after(grammarAccess.getForkDefinitionAccess().getUsesKeyword_7_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_7_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_7_0_0__1__Impl
	rule__ForkDefinition__Group_7_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_7_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_7_0_0_1()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_7_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_7_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_7_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_7_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getForkerClassAssignment_7_0_0_2()); }
(rule__ForkDefinition__ForkerClassAssignment_7_0_0_2)
{ after(grammarAccess.getForkDefinitionAccess().getForkerClassAssignment_7_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForkDefinition__Group_7_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_7_0_1__0__Impl
	rule__ForkDefinition__Group_7_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_7_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getBasedOnKeyword_7_0_1_0()); }

	'based on' 

{ after(grammarAccess.getForkDefinitionAccess().getBasedOnKeyword_7_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_7_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_7_0_1__1__Impl
	rule__ForkDefinition__Group_7_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_7_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_7_0_1_1()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_7_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_7_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_7_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_7_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getBaseForkAssignment_7_0_1_2()); }
(rule__ForkDefinition__BaseForkAssignment_7_0_1_2)
{ after(grammarAccess.getForkDefinitionAccess().getBaseForkAssignment_7_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForkDefinition__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_8__0__Impl
	rule__ForkDefinition__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getParametersAssignment_8_0()); }
(rule__ForkDefinition__ParametersAssignment_8_0)
{ after(grammarAccess.getForkDefinitionAccess().getParametersAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_8_1()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForkParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__0__Impl
	rule__ForkParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getNameAssignment_0()); }
(rule__ForkParameter__NameAssignment_0)
{ after(grammarAccess.getForkParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__1__Impl
	rule__ForkParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getForkParameterAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__2__Impl
	rule__ForkParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getForkParameterAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkParameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__3__Impl
	rule__ForkParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getForkParameterAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkParameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getValueAssignment_4()); }
(rule__ForkParameter__ValueAssignment_4)
{ after(grammarAccess.getForkParameterAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VariantDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__0__Impl
	rule__VariantDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getDocumentationAssignment_0()); }
(rule__VariantDefinition__DocumentationAssignment_0)?
{ after(grammarAccess.getVariantDefinitionAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__1__Impl
	rule__VariantDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getVariantdefKeyword_1()); }

	'variantdef' 

{ after(grammarAccess.getVariantDefinitionAccess().getVariantdefKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__2__Impl
	rule__VariantDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_2()); }
	ruleNL
{ after(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__3__Impl
	rule__VariantDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNameAssignment_3()); }
(rule__VariantDefinition__NameAssignment_3)
{ after(grammarAccess.getVariantDefinitionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__4__Impl
	rule__VariantDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_4()); }
	ruleNL
{ after(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getGroup_5()); }
(rule__VariantDefinition__Group_5__0)?
{ after(grammarAccess.getVariantDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VariantDefinition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group_5__0__Impl
	rule__VariantDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getDescriptionAssignment_5_0()); }
(rule__VariantDefinition__DescriptionAssignment_5_0)
{ after(grammarAccess.getVariantDefinitionAccess().getDescriptionAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_5_1()); }
	ruleNL
{ after(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TestDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__0__Impl
	rule__TestDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getDocumentationAssignment_0()); }
(rule__TestDefinition__DocumentationAssignment_0)?
{ after(grammarAccess.getTestDefinitionAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__1__Impl
	rule__TestDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getTestdefKeyword_1()); }

	'testdef' 

{ after(grammarAccess.getTestDefinitionAccess().getTestdefKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__2__Impl
	rule__TestDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_2()); }
	ruleNL
{ after(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__3__Impl
	rule__TestDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNameAssignment_3()); }
(rule__TestDefinition__NameAssignment_3)
{ after(grammarAccess.getTestDefinitionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__4__Impl
	rule__TestDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_4()); }
	ruleNL
{ after(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__5__Impl
	rule__TestDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getUsesKeyword_5()); }

	'uses' 

{ after(grammarAccess.getTestDefinitionAccess().getUsesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__6__Impl
	rule__TestDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_6()); }
	ruleNL
{ after(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__7__Impl
	rule__TestDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getFixtureMethodAssignment_7()); }
(rule__TestDefinition__FixtureMethodAssignment_7)
{ after(grammarAccess.getTestDefinitionAccess().getFixtureMethodAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_8()); }
	ruleNL
{ after(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__CallDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__0__Impl
	rule__CallDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getDocumentationAssignment_0()); }
(rule__CallDefinition__DocumentationAssignment_0)?
{ after(grammarAccess.getCallDefinitionAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__1__Impl
	rule__CallDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getCalldefKeyword_1()); }

	'calldef' 

{ after(grammarAccess.getCallDefinitionAccess().getCalldefKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__2__Impl
	rule__CallDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_2()); }
	ruleNL
{ after(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__3__Impl
	rule__CallDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNameAssignment_3()); }
(rule__CallDefinition__NameAssignment_3)
{ after(grammarAccess.getCallDefinitionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__4__Impl
	rule__CallDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_4()); }
	ruleNL
{ after(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__5__Impl
	rule__CallDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getUsesKeyword_5()); }

	'uses' 

{ after(grammarAccess.getCallDefinitionAccess().getUsesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__6__Impl
	rule__CallDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_6()); }
	ruleNL
{ after(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__7__Impl
	rule__CallDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getFixtureMethodAssignment_7()); }
(rule__CallDefinition__FixtureMethodAssignment_7)
{ after(grammarAccess.getCallDefinitionAccess().getFixtureMethodAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_8()); }
	ruleNL
{ after(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__SuiteDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__0__Impl
	rule__SuiteDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getDocumentationAssignment_0()); }
(rule__SuiteDefinition__DocumentationAssignment_0)?
{ after(grammarAccess.getSuiteDefinitionAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__1__Impl
	rule__SuiteDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getPrivateAssignment_1()); }
(rule__SuiteDefinition__PrivateAssignment_1)?
{ after(grammarAccess.getSuiteDefinitionAccess().getPrivateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__2__Impl
	rule__SuiteDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getSingleRunAssignment_2()); }
(rule__SuiteDefinition__SingleRunAssignment_2)?
{ after(grammarAccess.getSuiteDefinitionAccess().getSingleRunAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__3__Impl
	rule__SuiteDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getInlinedAssignment_3()); }
(rule__SuiteDefinition__InlinedAssignment_3)?
{ after(grammarAccess.getSuiteDefinitionAccess().getInlinedAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__4__Impl
	rule__SuiteDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getSuitedefKeyword_4()); }

	'suitedef' 

{ after(grammarAccess.getSuiteDefinitionAccess().getSuitedefKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__5__Impl
	rule__SuiteDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__6__Impl
	rule__SuiteDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNameAssignment_6()); }
(rule__SuiteDefinition__NameAssignment_6)
{ after(grammarAccess.getSuiteDefinitionAccess().getNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__7__Impl
	rule__SuiteDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__8__Impl
	rule__SuiteDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_8()); }
(rule__SuiteDefinition__Group_8__0)?
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__9__Impl
	rule__SuiteDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_9()); }
(rule__SuiteDefinition__Group_9__0)?
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__10__Impl
	rule__SuiteDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_10()); }
(rule__SuiteDefinition__Group_10__0)?
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__11__Impl
	rule__SuiteDefinition__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_11()); }
(rule__SuiteDefinition__Group_11__0)?
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__12__Impl
	rule__SuiteDefinition__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getWithKeyword_12()); }

	'with' 

{ after(grammarAccess.getSuiteDefinitionAccess().getWithKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__13__Impl
	rule__SuiteDefinition__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_13()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__14__Impl
	rule__SuiteDefinition__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getStatementsAssignment_14()); }
(rule__SuiteDefinition__StatementsAssignment_14)*
{ after(grammarAccess.getSuiteDefinitionAccess().getStatementsAssignment_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__15
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__15__Impl
	rule__SuiteDefinition__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__15__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getSuiteendKeyword_15()); }

	'suiteend' 

{ after(grammarAccess.getSuiteDefinitionAccess().getSuiteendKeyword_15()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__16
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__16__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__16__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_16()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_16()); }
)

;
finally {
	restoreStackSize(stackSize);
}




































rule__SuiteDefinition__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_8__0__Impl
	rule__SuiteDefinition__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGetsKeyword_8_0()); }

	'gets' 

{ after(grammarAccess.getSuiteDefinitionAccess().getGetsKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_8_1()); }
(rule__SuiteDefinition__Group_8_1__0)
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_8_1()); }
)
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_8_1()); }
(rule__SuiteDefinition__Group_8_1__0)*
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_8_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteDefinition__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_8_1__0__Impl
	rule__SuiteDefinition__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getParametersAssignment_8_1_0()); }
(rule__SuiteDefinition__ParametersAssignment_8_1_0)
{ after(grammarAccess.getSuiteDefinitionAccess().getParametersAssignment_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_8_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_8_1_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteDefinition__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_9__0__Impl
	rule__SuiteDefinition__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getReturnsKeyword_9_0()); }

	'returns' 

{ after(grammarAccess.getSuiteDefinitionAccess().getReturnsKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_9_1()); }
(rule__SuiteDefinition__Group_9_1__0)
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_9_1()); }
)
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_9_1()); }
(rule__SuiteDefinition__Group_9_1__0)*
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_9_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteDefinition__Group_9_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_9_1__0__Impl
	rule__SuiteDefinition__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_9_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getReturnAssignment_9_1_0()); }
(rule__SuiteDefinition__ReturnAssignment_9_1_0)
{ after(grammarAccess.getSuiteDefinitionAccess().getReturnAssignment_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_9_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_9_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_9_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_9_1_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_9_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteDefinition__Group_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_10__0__Impl
	rule__SuiteDefinition__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getRequiresKeyword_10_0()); }

	'requires' 

{ after(grammarAccess.getSuiteDefinitionAccess().getRequiresKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_10__1__Impl
	rule__SuiteDefinition__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_10_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_10_2()); }
(rule__SuiteDefinition__Group_10_2__0)*
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuiteDefinition__Group_10_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_10_2__0__Impl
	rule__SuiteDefinition__Group_10_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_10_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getDependenciesAssignment_10_2_0()); }
(rule__SuiteDefinition__DependenciesAssignment_10_2_0)
{ after(grammarAccess.getSuiteDefinitionAccess().getDependenciesAssignment_10_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_10_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_10_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_10_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_10_2_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_10_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteDefinition__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_11__0__Impl
	rule__SuiteDefinition__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getConcludedbyKeyword_11_0()); }

	'concludedby' 

{ after(grammarAccess.getSuiteDefinitionAccess().getConcludedbyKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_11__1__Impl
	rule__SuiteDefinition__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_11_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_11__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_11__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_11__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_11_2()); }
(rule__SuiteDefinition__Group_11_2__0)*
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_11_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuiteDefinition__Group_11_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_11_2__0__Impl
	rule__SuiteDefinition__Group_11_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_11_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getFinalizersAssignment_11_2_0()); }
(rule__SuiteDefinition__FinalizersAssignment_11_2_0)
{ after(grammarAccess.getSuiteDefinitionAccess().getFinalizersAssignment_11_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_11_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_11_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_11_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_11_2_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_11_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteParameterDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameterDefinition__Group__0__Impl
	rule__SuiteParameterDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameterDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterDefinitionAccess().getNameAssignment_0()); }
(rule__SuiteParameterDefinition__NameAssignment_0)
{ after(grammarAccess.getSuiteParameterDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameterDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameterDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameterDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterDefinitionAccess().getGroup_1()); }
(rule__SuiteParameterDefinition__Group_1__0)?
{ after(grammarAccess.getSuiteParameterDefinitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteParameterDefinition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameterDefinition__Group_1__0__Impl
	rule__SuiteParameterDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameterDefinition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterDefinitionAccess().getNLParserRuleCall_1_0()); }
	ruleNL
{ after(grammarAccess.getSuiteParameterDefinitionAccess().getNLParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameterDefinition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameterDefinition__Group_1__1__Impl
	rule__SuiteParameterDefinition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameterDefinition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterDefinitionAccess().getByDefaultKeyword_1_1()); }

	'by default' 

{ after(grammarAccess.getSuiteParameterDefinitionAccess().getByDefaultKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameterDefinition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameterDefinition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameterDefinition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterDefinitionAccess().getDefaultAssignment_1_2()); }
(rule__SuiteParameterDefinition__DefaultAssignment_1_2)
{ after(grammarAccess.getSuiteParameterDefinitionAccess().getDefaultAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OperationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__0__Impl
	rule__OperationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getOperationdefKeyword_0()); }

	'operationdef' 

{ after(grammarAccess.getOperationDefinitionAccess().getOperationdefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__1__Impl
	rule__OperationDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__2__Impl
	rule__OperationDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNameAssignment_2()); }
(rule__OperationDefinition__NameAssignment_2)
{ after(grammarAccess.getOperationDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__3__Impl
	rule__OperationDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__4__Impl
	rule__OperationDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getUsesKeyword_4()); }

	'uses' 

{ after(grammarAccess.getOperationDefinitionAccess().getUsesKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__5__Impl
	rule__OperationDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__6__Impl
	rule__OperationDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getOperationTypeAssignment_6()); }
(rule__OperationDefinition__OperationTypeAssignment_6)
{ after(grammarAccess.getOperationDefinitionAccess().getOperationTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__VariableDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__0__Impl
	rule__VariableDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getPrivateAssignment_0()); }
(rule__VariableDefinition__PrivateAssignment_0)?
{ after(grammarAccess.getVariableDefinitionAccess().getPrivateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__1__Impl
	rule__VariableDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getVariableKeyword_1()); }

	'variable' 

{ after(grammarAccess.getVariableDefinitionAccess().getVariableKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__2__Impl
	rule__VariableDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_2()); }
	ruleNL
{ after(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__3__Impl
	rule__VariableDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNameAssignment_3()); }
(rule__VariableDefinition__NameAssignment_3)
{ after(grammarAccess.getVariableDefinitionAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__4__Impl
	rule__VariableDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_4()); }
	ruleNL
{ after(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getGroup_5()); }
(rule__VariableDefinition__Group_5__0)?
{ after(grammarAccess.getVariableDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VariableDefinition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group_5__0__Impl
	rule__VariableDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getInitiallyKeyword_5_0()); }

	'initially' 

{ after(grammarAccess.getVariableDefinitionAccess().getInitiallyKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group_5__1__Impl
	rule__VariableDefinition__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_5_1()); }
	ruleNL
{ after(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group_5__2__Impl
	rule__VariableDefinition__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getInitialValueAssignment_5_2()); }
(rule__VariableDefinition__InitialValueAssignment_5_2)
{ after(grammarAccess.getVariableDefinitionAccess().getInitialValueAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_5_3()); }
	ruleNL
{ after(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__0__Impl
	rule__ConstantDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getDocumentationAssignment_0()); }
(rule__ConstantDefinition__DocumentationAssignment_0)?
{ after(grammarAccess.getConstantDefinitionAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__1__Impl
	rule__ConstantDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getPrivateAssignment_1()); }
(rule__ConstantDefinition__PrivateAssignment_1)?
{ after(grammarAccess.getConstantDefinitionAccess().getPrivateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__2__Impl
	rule__ConstantDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getConstantKeyword_2()); }

	'constant' 

{ after(grammarAccess.getConstantDefinitionAccess().getConstantKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__3__Impl
	rule__ConstantDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__4__Impl
	rule__ConstantDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNameAssignment_4()); }
(rule__ConstantDefinition__NameAssignment_4)
{ after(grammarAccess.getConstantDefinitionAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__5__Impl
	rule__ConstantDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__6__Impl
	rule__ConstantDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup_6()); }
(rule__ConstantDefinition__Group_6__0)
{ after(grammarAccess.getConstantDefinitionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup_7()); }
(rule__ConstantDefinition__Group_7__0)?
{ after(grammarAccess.getConstantDefinitionAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ConstantDefinition__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_6__0__Impl
	rule__ConstantDefinition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup_6_0()); }
(rule__ConstantDefinition__Group_6_0__0)?
{ after(grammarAccess.getConstantDefinitionAccess().getGroup_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup_6_1()); }
(rule__ConstantDefinition__Group_6_1__0)*
{ after(grammarAccess.getConstantDefinitionAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDefinition__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_6_0__0__Impl
	rule__ConstantDefinition__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getValueAssignment_6_0_0()); }
(rule__ConstantDefinition__ValueAssignment_6_0_0)
{ after(grammarAccess.getConstantDefinitionAccess().getValueAssignment_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_6_0_1()); }
	ruleNL
{ after(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDefinition__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_6_1__0__Impl
	rule__ConstantDefinition__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getVariantValuesAssignment_6_1_0()); }
(rule__ConstantDefinition__VariantValuesAssignment_6_1_0)
{ after(grammarAccess.getConstantDefinitionAccess().getVariantValuesAssignment_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_6_1_1()); }
	ruleNL
{ after(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDefinition__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_7__0__Impl
	rule__ConstantDefinition__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getParameterizedAssignment_7_0()); }
(rule__ConstantDefinition__ParameterizedAssignment_7_0)
{ after(grammarAccess.getConstantDefinitionAccess().getParameterizedAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_7_1()); }
	ruleNL
{ after(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__0__Impl
	rule__VariableAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getAssignKeyword_0()); }

	'assign' 

{ after(grammarAccess.getVariableAssignmentAccess().getAssignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__1__Impl
	rule__VariableAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVariableAssignmentAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__2__Impl
	rule__VariableAssignment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getValueAssignment_2()); }
(rule__VariableAssignment__ValueAssignment_2)
{ after(grammarAccess.getVariableAssignmentAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__3__Impl
	rule__VariableAssignment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getVariableAssignmentAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__4__Impl
	rule__VariableAssignment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getHyphenMinusGreaterThanSignKeyword_4()); }

	'->' 

{ after(grammarAccess.getVariableAssignmentAccess().getHyphenMinusGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__5__Impl
	rule__VariableAssignment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getVariableAssignmentAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__6__Impl
	rule__VariableAssignment__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getTargetAssignment_6()); }
(rule__VariableAssignment__TargetAssignment_6)
{ after(grammarAccess.getVariableAssignmentAccess().getTargetAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableAssignment__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableAssignment__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getVariableAssignmentAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__VariantValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__0__Impl
	rule__VariantValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getInKeyword_0()); }

	'in' 

{ after(grammarAccess.getVariantValueAccess().getInKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__1__Impl
	rule__VariantValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVariantValueAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__2__Impl
	rule__VariantValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariantValueAccess().getGroup_2()); }
(rule__VariantValue__Group_2__0)
{ after(grammarAccess.getVariantValueAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getVariantValueAccess().getGroup_2()); }
(rule__VariantValue__Group_2__0)*
{ after(grammarAccess.getVariantValueAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__3__Impl
	rule__VariantValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getVariantValueAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__4__Impl
	rule__VariantValue__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNLParserRuleCall_4()); }
	ruleNL
{ after(grammarAccess.getVariantValueAccess().getNLParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getValueAssignment_5()); }
(rule__VariantValue__ValueAssignment_5)
{ after(grammarAccess.getVariantValueAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VariantValue__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group_2__0__Impl
	rule__VariantValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNamesAssignment_2_0()); }
(rule__VariantValue__NamesAssignment_2_0)
{ after(grammarAccess.getVariantValueAccess().getNamesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getVariantValueAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Test__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__0__Impl
	rule__Test__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getCheckpointAssignment_0()); }
(rule__Test__CheckpointAssignment_0)?
{ after(grammarAccess.getTestAccess().getCheckpointAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__1__Impl
	rule__Test__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getTestKeyword_1()); }

	'test' 

{ after(grammarAccess.getTestAccess().getTestKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__2__Impl
	rule__Test__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_2()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__3__Impl
	rule__Test__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getDefinitionAssignment_3()); }
(rule__Test__DefinitionAssignment_3)
{ after(grammarAccess.getTestAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__4__Impl
	rule__Test__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getGroup_4()); }
(rule__Test__Group_4__0)*
{ after(grammarAccess.getTestAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__5__Impl
	rule__Test__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getGroup_5()); }
(rule__Test__Group_5__0)*
{ after(grammarAccess.getTestAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__6__Impl
	rule__Test__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getGroup_6()); }
(rule__Test__Group_6__0)?
{ after(grammarAccess.getTestAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Test__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_4__0__Impl
	rule__Test__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_4_0()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getParametersAssignment_4_1()); }
(rule__Test__ParametersAssignment_4_1)
{ after(grammarAccess.getTestAccess().getParametersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Test__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_5__0__Impl
	rule__Test__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_5_0()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getResultsAssignment_5_1()); }
(rule__Test__ResultsAssignment_5_1)
{ after(grammarAccess.getTestAccess().getResultsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Test__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_6__0__Impl
	rule__Test__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_6_0()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_6__1__Impl
	rule__Test__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getEqualsSignKeyword_6_1()); }

	'=' 

{ after(grammarAccess.getTestAccess().getEqualsSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_6__2__Impl
	rule__Test__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_6_2()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getResultAssignment_6_3()); }
(rule__Test__ResultAssignment_6_3)
{ after(grammarAccess.getTestAccess().getResultAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TableTest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__0__Impl
	rule__TableTest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getTabletestKeyword_0()); }

	'tabletest' 

{ after(grammarAccess.getTableTestAccess().getTabletestKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__1__Impl
	rule__TableTest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getTableTestAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__2__Impl
	rule__TableTest__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getDefinitionAssignment_2()); }
(rule__TableTest__DefinitionAssignment_2)
{ after(grammarAccess.getTableTestAccess().getDefinitionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__3__Impl
	rule__TableTest__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getGroup_3()); }
(rule__TableTest__Group_3__0)*
{ after(grammarAccess.getTableTestAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__4__Impl
	rule__TableTest__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_4()); }
	ruleNLFORCED
{ after(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__5__Impl
	rule__TableTest__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getParameterHeadersAssignment_5()); }
(rule__TableTest__ParameterHeadersAssignment_5)*
{ after(grammarAccess.getTableTestAccess().getParameterHeadersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__6__Impl
	rule__TableTest__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getResultHeadersAssignment_6()); }
(rule__TableTest__ResultHeadersAssignment_6)*
{ after(grammarAccess.getTableTestAccess().getResultHeadersAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__7__Impl
	rule__TableTest__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getVerticalLineKeyword_7()); }

	'|' 

{ after(grammarAccess.getTableTestAccess().getVerticalLineKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__8__Impl
	rule__TableTest__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getGroup_8()); }
(rule__TableTest__Group_8__0)?
{ after(grammarAccess.getTableTestAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__9__Impl
	rule__TableTest__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTableTestAccess().getGroup_9()); }
(rule__TableTest__Group_9__0)
{ after(grammarAccess.getTableTestAccess().getGroup_9()); }
)
(
{ before(grammarAccess.getTableTestAccess().getGroup_9()); }
(rule__TableTest__Group_9__0)*
{ after(grammarAccess.getTableTestAccess().getGroup_9()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_10()); }
	ruleNLFORCED
{ after(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__TableTest__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_3__0__Impl
	rule__TableTest__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLParserRuleCall_3_0()); }
	ruleNL
{ after(grammarAccess.getTableTestAccess().getNLParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getParametersAssignment_3_1()); }
(rule__TableTest__ParametersAssignment_3_1)
{ after(grammarAccess.getTableTestAccess().getParametersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableTest__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_8__0__Impl
	rule__TableTest__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getDefaultResultColumnAssignment_8_0()); }
(rule__TableTest__DefaultResultColumnAssignment_8_0)
{ after(grammarAccess.getTableTestAccess().getDefaultResultColumnAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getVerticalLineKeyword_8_1()); }

	'|' 

{ after(grammarAccess.getTableTestAccess().getVerticalLineKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableTest__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_9__0__Impl
	rule__TableTest__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_9_0()); }
	ruleNLFORCED
{ after(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getRowsAssignment_9_1()); }
(rule__TableTest__RowsAssignment_9_1)
{ after(grammarAccess.getTableTestAccess().getRowsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableTestRow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTestRow__Group__0__Impl
	rule__TableTestRow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTestRow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestRowAccess().getTableTestRowAction_0()); }
(

)
{ after(grammarAccess.getTableTestRowAccess().getTableTestRowAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTestRow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTestRow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTestRow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTableTestRowAccess().getValuesAssignment_1()); }
(rule__TableTestRow__ValuesAssignment_1)
{ after(grammarAccess.getTableTestRowAccess().getValuesAssignment_1()); }
)
(
{ before(grammarAccess.getTableTestRowAccess().getValuesAssignment_1()); }
(rule__TableTestRow__ValuesAssignment_1)*
{ after(grammarAccess.getTableTestRowAccess().getValuesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterTableHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableHeader__Group__0__Impl
	rule__ParameterTableHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getVerticalLineKeyword_0()); }

	'|' 

{ after(grammarAccess.getParameterTableHeaderAccess().getVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTableHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableHeader__Group__1__Impl
	rule__ParameterTableHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getNameAssignment_1()); }
(rule__ParameterTableHeader__NameAssignment_1)
{ after(grammarAccess.getParameterTableHeaderAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTableHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getVerticalLineKeyword_2()); }
(
	'|' 
)?
{ after(grammarAccess.getParameterTableHeaderAccess().getVerticalLineKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ResultTableHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultTableHeader__Group__0__Impl
	rule__ResultTableHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getVerticalLineKeyword_0()); }

	'|' 

{ after(grammarAccess.getResultTableHeaderAccess().getVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultTableHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultTableHeader__Group__1__Impl
	rule__ResultTableHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getNameAssignment_1()); }
(rule__ResultTableHeader__NameAssignment_1)
{ after(grammarAccess.getResultTableHeaderAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultTableHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultTableHeader__Group__2__Impl
	rule__ResultTableHeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getResultTableHeaderAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultTableHeader__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultTableHeader__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getVerticalLineKeyword_3()); }
(
	'|' 
)?
{ after(grammarAccess.getResultTableHeaderAccess().getVerticalLineKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterTableValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableValue__Group__0__Impl
	rule__ParameterTableValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableValueAccess().getVerticalLineKeyword_0()); }

	'|' 

{ after(grammarAccess.getParameterTableValueAccess().getVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTableValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableValue__Group__1__Impl
	rule__ParameterTableValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableValueAccess().getValueAssignment_1()); }
(rule__ParameterTableValue__ValueAssignment_1)
{ after(grammarAccess.getParameterTableValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTableValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableValueAccess().getVerticalLineKeyword_2()); }
(
	'|' 
)?
{ after(grammarAccess.getParameterTableValueAccess().getVerticalLineKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NamedResult__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__0__Impl
	rule__NamedResult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getNameAssignment_0()); }
(rule__NamedResult__NameAssignment_0)
{ after(grammarAccess.getNamedResultAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedResult__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__1__Impl
	rule__NamedResult__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getNamedResultAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedResult__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__2__Impl
	rule__NamedResult__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getNamedResultAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedResult__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__3__Impl
	rule__NamedResult__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getNamedResultAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedResult__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getValueAssignment_4()); }
(rule__NamedResult__ValueAssignment_4)
{ after(grammarAccess.getNamedResultAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Call__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__0__Impl
	rule__Call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getCallKeyword_0()); }

	'call' 

{ after(grammarAccess.getCallAccess().getCallKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__1__Impl
	rule__Call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__2__Impl
	rule__Call__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_2()); }
(rule__Call__Group_2__0)?
{ after(grammarAccess.getCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__3__Impl
	rule__Call__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getDefinitionAssignment_3()); }
(rule__Call__DefinitionAssignment_3)
{ after(grammarAccess.getCallAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__4__Impl
	rule__Call__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_4()); }
(rule__Call__Group_4__0)*
{ after(grammarAccess.getCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__5__Impl
	rule__Call__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_5()); }
(rule__Call__Group_5__0)*
{ after(grammarAccess.getCallAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__6__Impl
	rule__Call__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_6()); }
(rule__Call__Group_6__0)?
{ after(grammarAccess.getCallAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Call__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_2__0__Impl
	rule__Call__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getMultiplierAssignment_2_0()); }
(rule__Call__MultiplierAssignment_2_0)
{ after(grammarAccess.getCallAccess().getMultiplierAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Call__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_4__0__Impl
	rule__Call__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_4_0()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getParametersAssignment_4_1()); }
(rule__Call__ParametersAssignment_4_1)
{ after(grammarAccess.getCallAccess().getParametersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Call__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_5__0__Impl
	rule__Call__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_5_0()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getResultsAssignment_5_1()); }
(rule__Call__ResultsAssignment_5_1)
{ after(grammarAccess.getCallAccess().getResultsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Call__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_6__0__Impl
	rule__Call__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_6_0()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_6__1__Impl
	rule__Call__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getHyphenMinusGreaterThanSignKeyword_6_1()); }

	'->' 

{ after(grammarAccess.getCallAccess().getHyphenMinusGreaterThanSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_6__2__Impl
	rule__Call__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_6_2()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getResultAssignment_6_3()); }
(rule__Call__ResultAssignment_6_3)
{ after(grammarAccess.getCallAccess().getResultAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NamedCallResult__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__0__Impl
	rule__NamedCallResult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getNameAssignment_0()); }
(rule__NamedCallResult__NameAssignment_0)
{ after(grammarAccess.getNamedCallResultAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedCallResult__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__1__Impl
	rule__NamedCallResult__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getNamedCallResultAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedCallResult__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__2__Impl
	rule__NamedCallResult__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getHyphenMinusGreaterThanSignKeyword_2()); }

	'->' 

{ after(grammarAccess.getNamedCallResultAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedCallResult__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__3__Impl
	rule__NamedCallResult__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getNamedCallResultAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedCallResult__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getTargetAssignment_4()); }
(rule__NamedCallResult__TargetAssignment_4)
{ after(grammarAccess.getNamedCallResultAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TimeSet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group__0__Impl
	rule__TimeSet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getTimesetKeyword_0()); }

	'timeset' 

{ after(grammarAccess.getTimeSetAccess().getTimesetKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group__1__Impl
	rule__TimeSet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getTimeSetAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group__2__Impl
	rule__TimeSet__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getAlternatives_2()); }
(rule__TimeSet__Alternatives_2)
{ after(grammarAccess.getTimeSetAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getGroup_3()); }
(rule__TimeSet__Group_3__0)?
{ after(grammarAccess.getTimeSetAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TimeSet__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_0__0__Impl
	rule__TimeSet__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getLiveAssignment_2_0_0()); }
(rule__TimeSet__LiveAssignment_2_0_0)
{ after(grammarAccess.getTimeSetAccess().getLiveAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getNLParserRuleCall_2_0_1()); }
	ruleNL
{ after(grammarAccess.getTimeSetAccess().getNLParserRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeSet__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_1__0__Impl
	rule__TimeSet__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getAlternatives_2_1_0()); }
(rule__TimeSet__Alternatives_2_1_0)
{ after(grammarAccess.getTimeSetAccess().getAlternatives_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_1__1__Impl
	rule__TimeSet__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getNLParserRuleCall_2_1_1()); }
	ruleNL
{ after(grammarAccess.getTimeSetAccess().getNLParserRuleCall_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getGroup_2_1_2()); }
(rule__TimeSet__Group_2_1_2__0)?
{ after(grammarAccess.getTimeSetAccess().getGroup_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TimeSet__Group_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_1_2__0__Impl
	rule__TimeSet__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getProgressionModeAssignment_2_1_2_0()); }
(rule__TimeSet__ProgressionModeAssignment_2_1_2_0)
{ after(grammarAccess.getTimeSetAccess().getProgressionModeAssignment_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_1_2__1__Impl
	rule__TimeSet__Group_2_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getNLParserRuleCall_2_1_2_1()); }
	ruleNL
{ after(grammarAccess.getTimeSetAccess().getNLParserRuleCall_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_2_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getGroup_2_1_2_2()); }
(rule__TimeSet__Group_2_1_2_2__0)?
{ after(grammarAccess.getTimeSetAccess().getGroup_2_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TimeSet__Group_2_1_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_1_2_2__0__Impl
	rule__TimeSet__Group_2_1_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_1_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getProgressionFactorAssignment_2_1_2_2_0()); }
(rule__TimeSet__ProgressionFactorAssignment_2_1_2_2_0)
{ after(grammarAccess.getTimeSetAccess().getProgressionFactorAssignment_2_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_2_1_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_2_1_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_2_1_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getNLParserRuleCall_2_1_2_2_1()); }
	ruleNL
{ after(grammarAccess.getTimeSetAccess().getNLParserRuleCall_2_1_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeSet__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_3__0__Impl
	rule__TimeSet__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getOnKeyword_3_0()); }

	'on' 

{ after(grammarAccess.getTimeSetAccess().getOnKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_3__1__Impl
	rule__TimeSet__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getNLParserRuleCall_3_1()); }
	ruleNL
{ after(grammarAccess.getTimeSetAccess().getNLParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTimeSetAccess().getGroup_3_2()); }
(rule__TimeSet__Group_3_2__0)
{ after(grammarAccess.getTimeSetAccess().getGroup_3_2()); }
)
(
{ before(grammarAccess.getTimeSetAccess().getGroup_3_2()); }
(rule__TimeSet__Group_3_2__0)*
{ after(grammarAccess.getTimeSetAccess().getGroup_3_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TimeSet__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_3_2__0__Impl
	rule__TimeSet__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getAlternatives_3_2_0()); }
(rule__TimeSet__Alternatives_3_2_0)
{ after(grammarAccess.getTimeSetAccess().getAlternatives_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_3_2__1__Impl
	rule__TimeSet__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getCommaKeyword_3_2_1()); }
(
	',' 
)?
{ after(grammarAccess.getTimeSetAccess().getCommaKeyword_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeSet__Group_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeSet__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__Group_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getNLParserRuleCall_3_2_2()); }
	ruleNL
{ after(grammarAccess.getTimeSetAccess().getNLParserRuleCall_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TimeDifference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDifference__Group__0__Impl
	rule__TimeDifference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getDirectionAssignment_0()); }
(rule__TimeDifference__DirectionAssignment_0)
{ after(grammarAccess.getTimeDifferenceAccess().getDirectionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDifference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDifference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getAlternatives_1()); }
(rule__TimeDifference__Alternatives_1)
{ after(grammarAccess.getTimeDifferenceAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeDifference__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDifference__Group_1_0__0__Impl
	rule__TimeDifference__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getNLParserRuleCall_1_0_0()); }
	ruleNL
{ after(grammarAccess.getTimeDifferenceAccess().getNLParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDifference__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDifference__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getFixedValuesAssignment_1_0_1()); }
(rule__TimeDifference__FixedValuesAssignment_1_0_1)
{ after(grammarAccess.getTimeDifferenceAccess().getFixedValuesAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TimeDifference__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDifference__Group_1_1__0__Impl
	rule__TimeDifference__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getNLParserRuleCall_1_1_0()); }
	ruleNL
{ after(grammarAccess.getTimeDifferenceAccess().getNLParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TimeDifference__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TimeDifference__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getCalculatedValueAssignment_1_1_1()); }
(rule__TimeDifference__CalculatedValueAssignment_1_1_1)
{ after(grammarAccess.getTimeDifferenceAccess().getCalculatedValueAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suite__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__0__Impl
	rule__Suite__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getInlinedAssignment_0()); }
(rule__Suite__InlinedAssignment_0)?
{ after(grammarAccess.getSuiteAccess().getInlinedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__1__Impl
	rule__Suite__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getSuiteKeyword_1()); }

	'suite' 

{ after(grammarAccess.getSuiteAccess().getSuiteKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__2__Impl
	rule__Suite__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_2()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__3__Impl
	rule__Suite__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getGroup_3()); }
(rule__Suite__Group_3__0)?
{ after(grammarAccess.getSuiteAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__4__Impl
	rule__Suite__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getDefinitionAssignment_4()); }
(rule__Suite__DefinitionAssignment_4)
{ after(grammarAccess.getSuiteAccess().getDefinitionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__5__Impl
	rule__Suite__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__6__Impl
	rule__Suite__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getGroup_6()); }
(rule__Suite__Group_6__0)*
{ after(grammarAccess.getSuiteAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__7__Impl
	rule__Suite__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getGroup_7()); }
(rule__Suite__Group_7__0)*
{ after(grammarAccess.getSuiteAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__8__Impl
	rule__Suite__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getGroup_8()); }
(rule__Suite__Group_8__0)?
{ after(grammarAccess.getSuiteAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getGroup_9()); }
(rule__Suite__Group_9__0)?
{ after(grammarAccess.getSuiteAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Suite__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_3__0__Impl
	rule__Suite__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getMultiplierAssignment_3_0()); }
(rule__Suite__MultiplierAssignment_3_0)
{ after(grammarAccess.getSuiteAccess().getMultiplierAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_3_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suite__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_6__0__Impl
	rule__Suite__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getParametersAssignment_6_0()); }
(rule__Suite__ParametersAssignment_6_0)
{ after(grammarAccess.getSuiteAccess().getParametersAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_6_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suite__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_7__0__Impl
	rule__Suite__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getReturnAssignment_7_0()); }
(rule__Suite__ReturnAssignment_7_0)
{ after(grammarAccess.getSuiteAccess().getReturnAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_7_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suite__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_8__0__Impl
	rule__Suite__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getOnKeyword_8_0()); }

	'on' 

{ after(grammarAccess.getSuiteAccess().getOnKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_8__1__Impl
	rule__Suite__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_8_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_8__2__Impl
	rule__Suite__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getForkAssignment_8_2()); }
(rule__Suite__ForkAssignment_8_2)
{ after(grammarAccess.getSuiteAccess().getForkAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_8_3()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Suite__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_9__0__Impl
	rule__Suite__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getInKeyword_9_0()); }

	'in' 

{ after(grammarAccess.getSuiteAccess().getInKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_9__1__Impl
	rule__Suite__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_9_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSuiteAccess().getGroup_9_2()); }
(rule__Suite__Group_9_2__0)
{ after(grammarAccess.getSuiteAccess().getGroup_9_2()); }
)
(
{ before(grammarAccess.getSuiteAccess().getGroup_9_2()); }
(rule__Suite__Group_9_2__0)*
{ after(grammarAccess.getSuiteAccess().getGroup_9_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Suite__Group_9_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_9_2__0__Impl
	rule__Suite__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_9_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getVariantsAssignment_9_2_0()); }
(rule__Suite__VariantsAssignment_9_2_0)
{ after(grammarAccess.getSuiteAccess().getVariantsAssignment_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_9_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_9_2__1__Impl
	rule__Suite__Group_9_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_9_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getCommaKeyword_9_2_1()); }
(
	',' 
)?
{ after(grammarAccess.getSuiteAccess().getCommaKeyword_9_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_9_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_9_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_9_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_9_2_2()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_9_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuiteParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__0__Impl
	rule__SuiteParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getNameAssignment_0()); }
(rule__SuiteParameter__NameAssignment_0)
{ after(grammarAccess.getSuiteParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__1__Impl
	rule__SuiteParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getSuiteParameterAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__2__Impl
	rule__SuiteParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSuiteParameterAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__3__Impl
	rule__SuiteParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getSuiteParameterAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getValueAssignment_4()); }
(rule__SuiteParameter__ValueAssignment_4)
{ after(grammarAccess.getSuiteParameterAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SuiteReturn__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteReturn__Group__0__Impl
	rule__SuiteReturn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteReturn__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteReturnAccess().getNameAssignment_0()); }
(rule__SuiteReturn__NameAssignment_0)
{ after(grammarAccess.getSuiteReturnAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteReturn__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteReturn__Group__1__Impl
	rule__SuiteReturn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteReturn__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteReturnAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getSuiteReturnAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteReturn__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteReturn__Group__2__Impl
	rule__SuiteReturn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteReturn__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteReturnAccess().getHyphenMinusGreaterThanSignKeyword_2()); }

	'->' 

{ after(grammarAccess.getSuiteReturnAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteReturn__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteReturn__Group__3__Impl
	rule__SuiteReturn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteReturn__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteReturnAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getSuiteReturnAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteReturn__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteReturn__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteReturn__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteReturnAccess().getTargetAssignment_4()); }
(rule__SuiteReturn__TargetAssignment_4)
{ after(grammarAccess.getSuiteReturnAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
(rule__Parameter__NameAssignment_0)
{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getParameterAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getParameterAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
	rule__Parameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getParameterAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getValueAssignment_4()); }
(rule__Parameter__ValueAssignment_4)
{ after(grammarAccess.getParameterAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArbitraryParameterOrResultName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArbitraryParameterOrResultName__Group__0__Impl
	rule__ArbitraryParameterOrResultName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArbitraryParameterOrResultName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getPlusSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArbitraryParameterOrResultName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArbitraryParameterOrResultName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArbitraryParameterOrResultName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getAlternatives_1()); }
(rule__ArbitraryParameterOrResultName__Alternatives_1)
{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StandardOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__0__Impl
	rule__StandardOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getStandardOperationAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__1__Impl
	rule__StandardOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__2__Impl
	rule__StandardOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getFirstOperandAssignment_2()); }
(rule__StandardOperation__FirstOperandAssignment_2)
{ after(grammarAccess.getStandardOperationAccess().getFirstOperandAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__3__Impl
	rule__StandardOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__4__Impl
	rule__StandardOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStandardOperationAccess().getGroup_4()); }
(rule__StandardOperation__Group_4__0)
{ after(grammarAccess.getStandardOperationAccess().getGroup_4()); }
)
(
{ before(grammarAccess.getStandardOperationAccess().getGroup_4()); }
(rule__StandardOperation__Group_4__0)*
{ after(grammarAccess.getStandardOperationAccess().getGroup_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getStandardOperationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__StandardOperation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_4__0__Impl
	rule__StandardOperation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsAssignment_4_0()); }
(rule__StandardOperation__OperatorsAssignment_4_0)
{ after(grammarAccess.getStandardOperationAccess().getOperatorsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_4__1__Impl
	rule__StandardOperation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_4_1()); }
	ruleNL
{ after(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_4__2__Impl
	rule__StandardOperation__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getMoreOperandsAssignment_4_2()); }
(rule__StandardOperation__MoreOperandsAssignment_4_2)
{ after(grammarAccess.getStandardOperationAccess().getMoreOperandsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_4_3()); }
	ruleNL
{ after(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CustomOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__0__Impl
	rule__CustomOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getCustomOperationAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__1__Impl
	rule__CustomOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__2__Impl
	rule__CustomOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getGroup_2()); }
(rule__CustomOperation__Group_2__0)?
{ after(grammarAccess.getCustomOperationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__3__Impl
	rule__CustomOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getDefinitionAssignment_3()); }
(rule__CustomOperation__DefinitionAssignment_3)
{ after(grammarAccess.getCustomOperationAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__4__Impl
	rule__CustomOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getGroup_4()); }
(rule__CustomOperation__Group_4__0)?
{ after(grammarAccess.getCustomOperationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__5__Impl
	rule__CustomOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getRightSquareBracketKeyword_6()); }

	']' 

{ after(grammarAccess.getCustomOperationAccess().getRightSquareBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CustomOperation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_2__0__Impl
	rule__CustomOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getPrefixOperandAssignment_2_0()); }
(rule__CustomOperation__PrefixOperandAssignment_2_0)
{ after(grammarAccess.getCustomOperationAccess().getPrefixOperandAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CustomOperation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_4__0__Impl
	rule__CustomOperation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_4_0()); }
	ruleNL
{ after(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_4__1__Impl
	rule__CustomOperation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getWithKeyword_4_1()); }

	'with' 

{ after(grammarAccess.getCustomOperationAccess().getWithKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getPostfixOperandAssignment_4_2()); }
(rule__CustomOperation__PostfixOperandAssignment_4_2)
{ after(grammarAccess.getCustomOperationAccess().getPostfixOperandAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValueOrEnumValueOrOperationCollection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group__0__Impl
	rule__ValueOrEnumValueOrOperationCollection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getValueAssignment_0()); }
(rule__ValueOrEnumValueOrOperationCollection__ValueAssignment_0)
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueOrEnumValueOrOperationCollection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getGroup_1()); }
(rule__ValueOrEnumValueOrOperationCollection__Group_1__0)*
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueOrEnumValueOrOperationCollection__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group_1__0__Impl
	rule__ValueOrEnumValueOrOperationCollection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getNLParserRuleCall_1_0()); }
	ruleNL
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getNLParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueOrEnumValueOrOperationCollection__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group_1__1__Impl
	rule__ValueOrEnumValueOrOperationCollection__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getCommaKeyword_1_1()); }

	',' 

{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueOrEnumValueOrOperationCollection__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group_1__2__Impl
	rule__ValueOrEnumValueOrOperationCollection__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getNLParserRuleCall_1_2()); }
	ruleNL
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getNLParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueOrEnumValueOrOperationCollection__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getMoreValuesAssignment_1_3()); }
(rule__ValueOrEnumValueOrOperationCollection__MoreValuesAssignment_1_3)
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getMoreValuesAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IsoDateAndTimeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsoDateAndTimeValue__Group__0__Impl
	rule__IsoDateAndTimeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateAndTimeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getDateValueAssignment_0()); }
(rule__IsoDateAndTimeValue__DateValueAssignment_0)
{ after(grammarAccess.getIsoDateAndTimeValueAccess().getDateValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsoDateAndTimeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsoDateAndTimeValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateAndTimeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getTimeValueAssignment_1()); }
(rule__IsoDateAndTimeValue__TimeValueAssignment_1)
{ after(grammarAccess.getIsoDateAndTimeValueAccess().getTimeValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EuropeanDateAnd24HrsTimeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd24HrsTimeValue__Group__0__Impl
	rule__EuropeanDateAnd24HrsTimeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getDateValueAssignment_0()); }
(rule__EuropeanDateAnd24HrsTimeValue__DateValueAssignment_0)
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getDateValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EuropeanDateAnd24HrsTimeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd24HrsTimeValue__Group__1__Impl
	rule__EuropeanDateAnd24HrsTimeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EuropeanDateAnd24HrsTimeValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd24HrsTimeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getTimeValueAssignment_2()); }
(rule__EuropeanDateAnd24HrsTimeValue__TimeValueAssignment_2)
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getTimeValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EuropeanDateAnd12HrsTimeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd12HrsTimeValue__Group__0__Impl
	rule__EuropeanDateAnd12HrsTimeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getDateValueAssignment_0()); }
(rule__EuropeanDateAnd12HrsTimeValue__DateValueAssignment_0)
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getDateValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EuropeanDateAnd12HrsTimeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd12HrsTimeValue__Group__1__Impl
	rule__EuropeanDateAnd12HrsTimeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EuropeanDateAnd12HrsTimeValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd12HrsTimeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getTimeValueAssignment_2()); }
(rule__EuropeanDateAnd12HrsTimeValue__TimeValueAssignment_2)
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getTimeValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__USDateAnd12HrsTimeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__USDateAnd12HrsTimeValue__Group__0__Impl
	rule__USDateAnd12HrsTimeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getDateValueAssignment_0()); }
(rule__USDateAnd12HrsTimeValue__DateValueAssignment_0)
{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getDateValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__USDateAnd12HrsTimeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__USDateAnd12HrsTimeValue__Group__1__Impl
	rule__USDateAnd12HrsTimeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__USDateAnd12HrsTimeValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__USDateAnd12HrsTimeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getTimeValueAssignment_2()); }
(rule__USDateAnd12HrsTimeValue__TimeValueAssignment_2)
{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getTimeValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JavaConstantValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaConstantValue__Group__0__Impl
	rule__JavaConstantValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaConstantValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaConstantValueAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getJavaConstantValueAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaConstantValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaConstantValue__Group__1__Impl
	rule__JavaConstantValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaConstantValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaConstantValueAccess().getConstantAssignment_1()); }
(rule__JavaConstantValue__ConstantAssignment_1)
{ after(grammarAccess.getJavaConstantValueAccess().getConstantAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaConstantValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaConstantValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaConstantValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaConstantValueAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getJavaConstantValueAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_0()); }
(rule__Variable__NameAssignment_0)
{ after(grammarAccess.getVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_1()); }
(rule__Variable__Group_1__0)?
{ after(grammarAccess.getVariableAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__0__Impl
	rule__Variable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNumberSignKeyword_1_0()); }

	'#' 

{ after(grammarAccess.getVariableAccess().getNumberSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getAttributeAssignment_1_1()); }
(rule__Variable__AttributeAssignment_1_1)
{ after(grammarAccess.getVariableAccess().getAttributeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullValue__Group__0__Impl
	rule__NullValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullValueAccess().getNullAction_0()); }
(

)
{ after(grammarAccess.getNullValueAccess().getNullAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullValueAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullValueAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InexistentValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InexistentValue__Group__0__Impl
	rule__InexistentValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InexistentValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInexistentValueAccess().getInexistentAction_0()); }
(

)
{ after(grammarAccess.getInexistentValueAccess().getInexistentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InexistentValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InexistentValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InexistentValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInexistentValueAccess().getInexistentKeyword_1()); }

	'inexistent' 

{ after(grammarAccess.getInexistentValueAccess().getInexistentKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EmptyValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyValue__Group__0__Impl
	rule__EmptyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyValueAccess().getEmptyAction_0()); }
(

)
{ after(grammarAccess.getEmptyValueAccess().getEmptyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyValueAccess().getEmptyKeyword_1()); }

	'empty' 

{ after(grammarAccess.getEmptyValueAccess().getEmptyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group__0__Impl
	rule__NestedObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getNestedObjectAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group__1__Impl
	rule__NestedObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getNestedObjectAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group__2__Impl
	rule__NestedObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNestedObjectAccess().getGroup_2()); }
(rule__NestedObject__Group_2__0)
{ after(grammarAccess.getNestedObjectAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getNestedObjectAccess().getGroup_2()); }
(rule__NestedObject__Group_2__0)*
{ after(grammarAccess.getNestedObjectAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getNestedObjectAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NestedObject__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group_2__0__Impl
	rule__NestedObject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getAttributesAssignment_2_0()); }
(rule__NestedObject__AttributesAssignment_2_0)
{ after(grammarAccess.getNestedObjectAccess().getAttributesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getNestedObjectAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypedNestedObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedNestedObject__Group__0__Impl
	rule__TypedNestedObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedNestedObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedNestedObjectAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTypedNestedObjectAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedNestedObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedNestedObject__Group__1__Impl
	rule__TypedNestedObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedNestedObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedNestedObjectAccess().getTypeAssignment_1()); }
(rule__TypedNestedObject__TypeAssignment_1)
{ after(grammarAccess.getTypedNestedObjectAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedNestedObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedNestedObject__Group__2__Impl
	rule__TypedNestedObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedNestedObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedNestedObjectAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getTypedNestedObjectAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedNestedObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedNestedObject__Group__3__Impl
	rule__TypedNestedObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedNestedObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedNestedObjectAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getTypedNestedObjectAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedNestedObject__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedNestedObject__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedNestedObject__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedNestedObjectAccess().getNestedObjectAssignment_4()); }
(rule__TypedNestedObject__NestedObjectAssignment_4)
{ after(grammarAccess.getTypedNestedObjectAccess().getNestedObjectAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__KeyValuePair__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__0__Impl
	rule__KeyValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getAlternatives_0()); }
(rule__KeyValuePair__Alternatives_0)
{ after(grammarAccess.getKeyValuePairAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__1__Impl
	rule__KeyValuePair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getKeyValuePairAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__2__Impl
	rule__KeyValuePair__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getKeyValuePairAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__3__Impl
	rule__KeyValuePair__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getKeyValuePairAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getValueAssignment_4()); }
(rule__KeyValuePair__ValueAssignment_4)
{ after(grammarAccess.getKeyValuePairAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodReference__Group__0__Impl
	rule__MethodReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getTypeAssignment_0()); }
(rule__MethodReference__TypeAssignment_0)
{ after(grammarAccess.getMethodReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodReference__Group__1__Impl
	rule__MethodReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getMethodReferenceAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getMethodAssignment_2()); }
(rule__MethodReference__MethodAssignment_2)
{ after(grammarAccess.getMethodReferenceAccess().getMethodAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__JavaConstantReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaConstantReference__Group__0__Impl
	rule__JavaConstantReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaConstantReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaConstantReferenceAccess().getTypeAssignment_0()); }
(rule__JavaConstantReference__TypeAssignment_0)
{ after(grammarAccess.getJavaConstantReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaConstantReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaConstantReference__Group__1__Impl
	rule__JavaConstantReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaConstantReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaConstantReferenceAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getJavaConstantReferenceAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__JavaConstantReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__JavaConstantReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JavaConstantReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaConstantReferenceAccess().getConstantAssignment_2()); }
(rule__JavaConstantReference__ConstantAssignment_2)
{ after(grammarAccess.getJavaConstantReferenceAccess().getConstantAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExecutionMultiplier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutionMultiplier__Group__0__Impl
	rule__ExecutionMultiplier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionMultiplier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionMultiplierAccess().getCountAssignment_0()); }
(rule__ExecutionMultiplier__CountAssignment_0)
{ after(grammarAccess.getExecutionMultiplierAccess().getCountAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionMultiplier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutionMultiplier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionMultiplier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionMultiplierAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getExecutionMultiplierAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedJavaClassName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedJavaClassName__Group__0__Impl
	rule__QualifiedJavaClassName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedJavaClassName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedJavaClassNameAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedJavaClassNameAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedJavaClassName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedJavaClassName__Group__1__Impl
	rule__QualifiedJavaClassName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedJavaClassName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedJavaClassNameAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getQualifiedJavaClassNameAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedJavaClassName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedJavaClassName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedJavaClassName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedJavaClassNameAccess().getUPPERCASE_IDTerminalRuleCall_2()); }
	RULE_UPPERCASE_ID
{ after(grammarAccess.getQualifiedJavaClassNameAccess().getUPPERCASE_IDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DocumentationComment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DocumentationComment__Group__0__Impl
	rule__DocumentationComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationCommentAccess().getContentAssignment_0()); }
(rule__DocumentationComment__ContentAssignment_0)
{ after(grammarAccess.getDocumentationCommentAccess().getContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DocumentationComment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DocumentationComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationCommentAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getDocumentationCommentAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NL__Group__0__Impl
	rule__NL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLAccess().getNEWLINETerminalRuleCall_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getNLAccess().getNEWLINETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NL__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)?
{ after(grammarAccess.getNLAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NLFORCED__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLFORCED__Group__0__Impl
	rule__NLFORCED__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NLFORCED__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLFORCEDAccess().getNEWLINETerminalRuleCall_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getNLFORCEDAccess().getNEWLINETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLFORCED__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLFORCED__Group__1__Impl
	rule__NLFORCED__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NLFORCED__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLFORCEDAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)?
{ after(grammarAccess.getNLFORCEDAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLFORCED__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLFORCED__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NLFORCED__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLFORCEDAccess().getNLParserRuleCall_2()); }
	ruleNL
{ after(grammarAccess.getNLFORCEDAccess().getNLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__ImportsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__StatementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineNormalComment__ContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineNormalCommentAccess().getContentSL_VISIBLE_COMMENTTerminalRuleCall_0_0()); }
	RULE_SL_VISIBLE_COMMENT{ after(grammarAccess.getVisibleSingleLineNormalCommentAccess().getContentSL_VISIBLE_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineTitleComment__ContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineTitleCommentAccess().getContentSL_VISIBLE_TITLE_COMMENTTerminalRuleCall_0_0()); }
	RULE_SL_VISIBLE_TITLE_COMMENT{ after(grammarAccess.getVisibleSingleLineTitleCommentAccess().getContentSL_VISIBLE_TITLE_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineNormalComment__ContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineNormalCommentAccess().getContentML_VISIBLE_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_VISIBLE_COMMENT{ after(grammarAccess.getVisibleMultiLineNormalCommentAccess().getContentML_VISIBLE_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineTitleComment__ContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineTitleCommentAccess().getContentML_VISIBLE_TITLE_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_VISIBLE_TITLE_COMMENT{ after(grammarAccess.getVisibleMultiLineTitleCommentAccess().getContentML_VISIBLE_TITLE_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleDivider__ContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleDividerAccess().getContentDIVIDERTerminalRuleCall_0_0()); }
	RULE_DIVIDER{ after(grammarAccess.getVisibleDividerAccess().getContentDIVIDERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
	ruleDocumentationComment{ after(grammarAccess.getPackageDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDefinitionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__StatementsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getStatementsPackageStatementParserRuleCall_6_0()); }
	rulePackageStatement{ after(grammarAccess.getPackageDefinitionAccess().getStatementsPackageStatementParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
	ruleDocumentationComment{ after(grammarAccess.getForkDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__PrivateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getPrivatePrivateKeyword_1_0()); }
(
{ before(grammarAccess.getForkDefinitionAccess().getPrivatePrivateKeyword_1_0()); }

	'private' 

{ after(grammarAccess.getForkDefinitionAccess().getPrivatePrivateKeyword_1_0()); }
)

{ after(grammarAccess.getForkDefinitionAccess().getPrivatePrivateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNameQualifiedNameParserRuleCall_4_0()); }
	ruleQualifiedName{ after(grammarAccess.getForkDefinitionAccess().getNameQualifiedNameParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__DescriptionAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_6_0_0()); }
	RULE_STRING{ after(grammarAccess.getForkDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__ForkerClassAssignment_7_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getForkerClassJavaClassReferenceParserRuleCall_7_0_0_2_0()); }
	ruleJavaClassReference{ after(grammarAccess.getForkDefinitionAccess().getForkerClassJavaClassReferenceParserRuleCall_7_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__BaseForkAssignment_7_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getBaseForkForkDefinitionCrossReference_7_0_1_2_0()); }
(
{ before(grammarAccess.getForkDefinitionAccess().getBaseForkForkDefinitionQualifiedNameParserRuleCall_7_0_1_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getForkDefinitionAccess().getBaseForkForkDefinitionQualifiedNameParserRuleCall_7_0_1_2_0_1()); }
)
{ after(grammarAccess.getForkDefinitionAccess().getBaseForkForkDefinitionCrossReference_7_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__ParametersAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getParametersForkParameterParserRuleCall_8_0_0()); }
	ruleForkParameter{ after(grammarAccess.getForkDefinitionAccess().getParametersForkParameterParserRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getNameFixedParameterNameParserRuleCall_0_0()); }
	ruleFixedParameterName{ after(grammarAccess.getForkParameterAccess().getNameFixedParameterNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getValueValueOrEnumValueOrOperationParserRuleCall_4_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getForkParameterAccess().getValueValueOrEnumValueOrOperationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
	ruleDocumentationComment{ after(grammarAccess.getVariantDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getVariantDefinitionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__DescriptionAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_5_0_0()); }
	RULE_STRING{ after(grammarAccess.getVariantDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
	ruleDocumentationComment{ after(grammarAccess.getTestDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getTestDefinitionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__FixtureMethodAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getFixtureMethodMethodReferenceParserRuleCall_7_0()); }
	ruleMethodReference{ after(grammarAccess.getTestDefinitionAccess().getFixtureMethodMethodReferenceParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
	ruleDocumentationComment{ after(grammarAccess.getCallDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getCallDefinitionAccess().getNameQualifiedNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__FixtureMethodAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getFixtureMethodMethodReferenceParserRuleCall_7_0()); }
	ruleMethodReference{ after(grammarAccess.getCallDefinitionAccess().getFixtureMethodMethodReferenceParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
	ruleDocumentationComment{ after(grammarAccess.getSuiteDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__PrivateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getPrivatePrivateKeyword_1_0()); }
(
{ before(grammarAccess.getSuiteDefinitionAccess().getPrivatePrivateKeyword_1_0()); }

	'private' 

{ after(grammarAccess.getSuiteDefinitionAccess().getPrivatePrivateKeyword_1_0()); }
)

{ after(grammarAccess.getSuiteDefinitionAccess().getPrivatePrivateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__SingleRunAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getSingleRunSingleRunKeyword_2_0()); }
(
{ before(grammarAccess.getSuiteDefinitionAccess().getSingleRunSingleRunKeyword_2_0()); }

	'single-run' 

{ after(grammarAccess.getSuiteDefinitionAccess().getSingleRunSingleRunKeyword_2_0()); }
)

{ after(grammarAccess.getSuiteDefinitionAccess().getSingleRunSingleRunKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__InlinedAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getInlinedInlinedKeyword_3_0()); }
(
{ before(grammarAccess.getSuiteDefinitionAccess().getInlinedInlinedKeyword_3_0()); }

	'inlined' 

{ after(grammarAccess.getSuiteDefinitionAccess().getInlinedInlinedKeyword_3_0()); }
)

{ after(grammarAccess.getSuiteDefinitionAccess().getInlinedInlinedKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__NameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNameQualifiedNameParserRuleCall_6_0()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteDefinitionAccess().getNameQualifiedNameParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__ParametersAssignment_8_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getParametersSuiteParameterDefinitionParserRuleCall_8_1_0_0()); }
	ruleSuiteParameterDefinition{ after(grammarAccess.getSuiteDefinitionAccess().getParametersSuiteParameterDefinitionParserRuleCall_8_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__ReturnAssignment_9_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getReturnSuiteReturnDefinitionParserRuleCall_9_1_0_0()); }
	ruleSuiteReturnDefinition{ after(grammarAccess.getSuiteDefinitionAccess().getReturnSuiteReturnDefinitionParserRuleCall_9_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__DependenciesAssignment_10_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getDependenciesSuiteDefinitionCrossReference_10_2_0_0()); }
(
{ before(grammarAccess.getSuiteDefinitionAccess().getDependenciesSuiteDefinitionQualifiedNameParserRuleCall_10_2_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteDefinitionAccess().getDependenciesSuiteDefinitionQualifiedNameParserRuleCall_10_2_0_0_1()); }
)
{ after(grammarAccess.getSuiteDefinitionAccess().getDependenciesSuiteDefinitionCrossReference_10_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__FinalizersAssignment_11_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getFinalizersSuiteDefinitionCrossReference_11_2_0_0()); }
(
{ before(grammarAccess.getSuiteDefinitionAccess().getFinalizersSuiteDefinitionQualifiedNameParserRuleCall_11_2_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteDefinitionAccess().getFinalizersSuiteDefinitionQualifiedNameParserRuleCall_11_2_0_0_1()); }
)
{ after(grammarAccess.getSuiteDefinitionAccess().getFinalizersSuiteDefinitionCrossReference_11_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__StatementsAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getStatementsSuiteStatementParserRuleCall_14_0()); }
	ruleSuiteStatement{ after(grammarAccess.getSuiteDefinitionAccess().getStatementsSuiteStatementParserRuleCall_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameterDefinition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterDefinitionAccess().getNameVariableEntityParserRuleCall_0_0()); }
	ruleVariableEntity{ after(grammarAccess.getSuiteParameterDefinitionAccess().getNameVariableEntityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameterDefinition__DefaultAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterDefinitionAccess().getDefaultValueOrEnumValueOrOperationCollectionParserRuleCall_1_2_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getSuiteParameterDefinitionAccess().getDefaultValueOrEnumValueOrOperationCollectionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteReturnDefinition__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteReturnDefinitionAccess().getNameVariableEntityParserRuleCall_0()); }
	ruleVariableEntity{ after(grammarAccess.getSuiteReturnDefinitionAccess().getNameVariableEntityParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getOperationDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__OperationTypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getOperationTypeJavaClassReferenceParserRuleCall_6_0()); }
	ruleJavaClassReference{ after(grammarAccess.getOperationDefinitionAccess().getOperationTypeJavaClassReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__PrivateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getPrivatePrivateKeyword_0_0()); }
(
{ before(grammarAccess.getVariableDefinitionAccess().getPrivatePrivateKeyword_0_0()); }

	'private' 

{ after(grammarAccess.getVariableDefinitionAccess().getPrivatePrivateKeyword_0_0()); }
)

{ after(grammarAccess.getVariableDefinitionAccess().getPrivatePrivateKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNameVariableEntityParserRuleCall_3_0()); }
	ruleVariableEntity{ after(grammarAccess.getVariableDefinitionAccess().getNameVariableEntityParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__InitialValueAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getInitialValueValueOrEnumValueOrOperationCollectionParserRuleCall_5_2_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getVariableDefinitionAccess().getInitialValueValueOrEnumValueOrOperationCollectionParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
	ruleDocumentationComment{ after(grammarAccess.getConstantDefinitionAccess().getDocumentationDocumentationCommentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__PrivateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getPrivatePrivateKeyword_1_0()); }
(
{ before(grammarAccess.getConstantDefinitionAccess().getPrivatePrivateKeyword_1_0()); }

	'private' 

{ after(grammarAccess.getConstantDefinitionAccess().getPrivatePrivateKeyword_1_0()); }
)

{ after(grammarAccess.getConstantDefinitionAccess().getPrivatePrivateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNameConstantEntityParserRuleCall_4_0()); }
	ruleConstantEntity{ after(grammarAccess.getConstantDefinitionAccess().getNameConstantEntityParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__ValueAssignment_6_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_6_0_0_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getConstantDefinitionAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_6_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__VariantValuesAssignment_6_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getVariantValuesVariantValueParserRuleCall_6_1_0_0()); }
	ruleVariantValue{ after(grammarAccess.getConstantDefinitionAccess().getVariantValuesVariantValueParserRuleCall_6_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__ParameterizedAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getParameterizedParameterizedKeyword_7_0_0()); }
(
{ before(grammarAccess.getConstantDefinitionAccess().getParameterizedParameterizedKeyword_7_0_0()); }

	'parameterized' 

{ after(grammarAccess.getConstantDefinitionAccess().getParameterizedParameterizedKeyword_7_0_0()); }
)

{ after(grammarAccess.getConstantDefinitionAccess().getParameterizedParameterizedKeyword_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_2_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getVariableAssignmentAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableAssignment__TargetAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAssignmentAccess().getTargetVariableVariableParserRuleCall_6_0()); }
	ruleVariableVariable{ after(grammarAccess.getVariableAssignmentAccess().getTargetVariableVariableParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__NamesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNamesVariantDefinitionCrossReference_2_0_0()); }
(
{ before(grammarAccess.getVariantValueAccess().getNamesVariantDefinitionQualifiedNameParserRuleCall_2_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVariantValueAccess().getNamesVariantDefinitionQualifiedNameParserRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getVariantValueAccess().getNamesVariantDefinitionCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_5_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getVariantValueAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableEntity__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableEntityAccess().getNameQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName{ after(grammarAccess.getVariableEntityAccess().getNameQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantEntity__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantEntityAccess().getNameQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName{ after(grammarAccess.getConstantEntityAccess().getNameQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__CheckpointAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getCheckpointCheckpointKeyword_0_0()); }
(
{ before(grammarAccess.getTestAccess().getCheckpointCheckpointKeyword_0_0()); }

	'checkpoint' 

{ after(grammarAccess.getTestAccess().getCheckpointCheckpointKeyword_0_0()); }
)

{ after(grammarAccess.getTestAccess().getCheckpointCheckpointKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getDefinitionTestDefinitionCrossReference_3_0()); }
(
{ before(grammarAccess.getTestAccess().getDefinitionTestDefinitionQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTestAccess().getDefinitionTestDefinitionQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTestAccess().getDefinitionTestDefinitionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__ParametersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getParametersParameterParserRuleCall_4_1_0()); }
	ruleParameter{ after(grammarAccess.getTestAccess().getParametersParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__ResultsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getResultsNamedResultParserRuleCall_5_1_0()); }
	ruleNamedResult{ after(grammarAccess.getTestAccess().getResultsNamedResultParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__ResultAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getResultValueOrEnumValueOrOperationCollectionParserRuleCall_6_3_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getTestAccess().getResultValueOrEnumValueOrOperationCollectionParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__DefinitionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getDefinitionTestDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getTableTestAccess().getDefinitionTestDefinitionQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTableTestAccess().getDefinitionTestDefinitionQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTableTestAccess().getDefinitionTestDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__ParametersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getParametersParameterParserRuleCall_3_1_0()); }
	ruleParameter{ after(grammarAccess.getTableTestAccess().getParametersParameterParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__ParameterHeadersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getParameterHeadersParameterTableHeaderParserRuleCall_5_0()); }
	ruleParameterTableHeader{ after(grammarAccess.getTableTestAccess().getParameterHeadersParameterTableHeaderParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__ResultHeadersAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getResultHeadersResultTableHeaderParserRuleCall_6_0()); }
	ruleResultTableHeader{ after(grammarAccess.getTableTestAccess().getResultHeadersResultTableHeaderParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__DefaultResultColumnAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getDefaultResultColumnEqualsSignKeyword_8_0_0()); }
(
{ before(grammarAccess.getTableTestAccess().getDefaultResultColumnEqualsSignKeyword_8_0_0()); }

	'=' 

{ after(grammarAccess.getTableTestAccess().getDefaultResultColumnEqualsSignKeyword_8_0_0()); }
)

{ after(grammarAccess.getTableTestAccess().getDefaultResultColumnEqualsSignKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__RowsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getRowsTableTestRowParserRuleCall_9_1_0()); }
	ruleTableTestRow{ after(grammarAccess.getTableTestAccess().getRowsTableTestRowParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTestRow__ValuesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestRowAccess().getValuesParameterTableValueParserRuleCall_1_0()); }
	ruleParameterTableValue{ after(grammarAccess.getTableTestRowAccess().getValuesParameterTableValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableHeader__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getNameParameterNameParserRuleCall_1_0()); }
	ruleParameterName{ after(grammarAccess.getParameterTableHeaderAccess().getNameParameterNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getNameResultNameParserRuleCall_1_0()); }
	ruleResultName{ after(grammarAccess.getResultTableHeaderAccess().getNameResultNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableValueAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_1_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getParameterTableValueAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getNameResultNameParserRuleCall_0_0()); }
	ruleResultName{ after(grammarAccess.getNamedResultAccess().getNameResultNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getNamedResultAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FixedResultName__FieldAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedResultNameAccess().getFieldJvmFieldCrossReference_0()); }
(
{ before(grammarAccess.getFixedResultNameAccess().getFieldJvmFieldIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFixedResultNameAccess().getFieldJvmFieldIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFixedResultNameAccess().getFieldJvmFieldCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__MultiplierAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getMultiplierExecutionMultiplierParserRuleCall_2_0_0()); }
	ruleExecutionMultiplier{ after(grammarAccess.getCallAccess().getMultiplierExecutionMultiplierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getDefinitionCallDefinitionCrossReference_3_0()); }
(
{ before(grammarAccess.getCallAccess().getDefinitionCallDefinitionQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getCallAccess().getDefinitionCallDefinitionQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getCallAccess().getDefinitionCallDefinitionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ParametersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getParametersParameterParserRuleCall_4_1_0()); }
	ruleParameter{ after(grammarAccess.getCallAccess().getParametersParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ResultsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getResultsNamedCallResultParserRuleCall_5_1_0()); }
	ruleNamedCallResult{ after(grammarAccess.getCallAccess().getResultsNamedCallResultParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ResultAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getResultVariableVariableParserRuleCall_6_3_0()); }
	ruleVariableVariable{ after(grammarAccess.getCallAccess().getResultVariableVariableParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getNameResultNameParserRuleCall_0_0()); }
	ruleResultName{ after(grammarAccess.getNamedCallResultAccess().getNameResultNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getTargetVariableVariableParserRuleCall_4_0()); }
	ruleVariableVariable{ after(grammarAccess.getNamedCallResultAccess().getTargetVariableVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__LiveAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getLiveLiveKeyword_2_0_0_0()); }
(
{ before(grammarAccess.getTimeSetAccess().getLiveLiveKeyword_2_0_0_0()); }

	'live' 

{ after(grammarAccess.getTimeSetAccess().getLiveLiveKeyword_2_0_0_0()); }
)

{ after(grammarAccess.getTimeSetAccess().getLiveLiveKeyword_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__StartTimeAssignment_2_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getStartTimeValueOrEnumValueOrOperationParserRuleCall_2_1_0_0_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getTimeSetAccess().getStartTimeValueOrEnumValueOrOperationParserRuleCall_2_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__DiffTimeAssignment_2_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getDiffTimeTimeDifferenceParserRuleCall_2_1_0_1_0()); }
	ruleTimeDifference{ after(grammarAccess.getTimeSetAccess().getDiffTimeTimeDifferenceParserRuleCall_2_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__ProgressionModeAssignment_2_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getProgressionModeProgressingKeyword_2_1_2_0_0()); }
(
{ before(grammarAccess.getTimeSetAccess().getProgressionModeProgressingKeyword_2_1_2_0_0()); }

	'progressing' 

{ after(grammarAccess.getTimeSetAccess().getProgressionModeProgressingKeyword_2_1_2_0_0()); }
)

{ after(grammarAccess.getTimeSetAccess().getProgressionModeProgressingKeyword_2_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__ProgressionFactorAssignment_2_1_2_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getProgressionFactorTimeProgressionFactorParserRuleCall_2_1_2_2_0_0()); }
	ruleTimeProgressionFactor{ after(grammarAccess.getTimeSetAccess().getProgressionFactorTimeProgressionFactorParserRuleCall_2_1_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__ForksAssignment_3_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getForksForkDefinitionCrossReference_3_2_0_0_0()); }
(
{ before(grammarAccess.getTimeSetAccess().getForksForkDefinitionQualifiedNameParserRuleCall_3_2_0_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTimeSetAccess().getForksForkDefinitionQualifiedNameParserRuleCall_3_2_0_0_0_1()); }
)
{ after(grammarAccess.getTimeSetAccess().getForksForkDefinitionCrossReference_3_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeSet__MasterForkAssignment_3_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeSetAccess().getMasterForkMasterKeyword_3_2_0_1_0()); }
(
{ before(grammarAccess.getTimeSetAccess().getMasterForkMasterKeyword_3_2_0_1_0()); }

	'master' 

{ after(grammarAccess.getTimeSetAccess().getMasterForkMasterKeyword_3_2_0_1_0()); }
)

{ after(grammarAccess.getTimeSetAccess().getMasterForkMasterKeyword_3_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeProgressionFactor__FixedValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeProgressionFactorAccess().getFixedValueMULTIPLIERTerminalRuleCall_0_0()); }
	RULE_MULTIPLIER{ after(grammarAccess.getTimeProgressionFactorAccess().getFixedValueMULTIPLIERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeProgressionFactor__CalculatedValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeProgressionFactorAccess().getCalculatedValueAlternatives_1_0()); }
(rule__TimeProgressionFactor__CalculatedValueAlternatives_1_0)
{ after(grammarAccess.getTimeProgressionFactorAccess().getCalculatedValueAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__DirectionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getDirectionAlternatives_0_0()); }
(rule__TimeDifference__DirectionAlternatives_0_0)
{ after(grammarAccess.getTimeDifferenceAccess().getDirectionAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__FixedValuesAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getFixedValuesTIMESPANTerminalRuleCall_1_0_1_0()); }
	RULE_TIMESPAN{ after(grammarAccess.getTimeDifferenceAccess().getFixedValuesTIMESPANTerminalRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeDifference__CalculatedValueAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeDifferenceAccess().getCalculatedValueAlternatives_1_1_1_0()); }
(rule__TimeDifference__CalculatedValueAlternatives_1_1_1_0)
{ after(grammarAccess.getTimeDifferenceAccess().getCalculatedValueAlternatives_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__InlinedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getInlinedInlinedKeyword_0_0()); }
(
{ before(grammarAccess.getSuiteAccess().getInlinedInlinedKeyword_0_0()); }

	'inlined' 

{ after(grammarAccess.getSuiteAccess().getInlinedInlinedKeyword_0_0()); }
)

{ after(grammarAccess.getSuiteAccess().getInlinedInlinedKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__MultiplierAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getMultiplierExecutionMultiplierParserRuleCall_3_0_0()); }
	ruleExecutionMultiplier{ after(grammarAccess.getSuiteAccess().getMultiplierExecutionMultiplierParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__DefinitionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getDefinitionSuiteDefinitionCrossReference_4_0()); }
(
{ before(grammarAccess.getSuiteAccess().getDefinitionSuiteDefinitionQualifiedNameParserRuleCall_4_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteAccess().getDefinitionSuiteDefinitionQualifiedNameParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getSuiteAccess().getDefinitionSuiteDefinitionCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__ParametersAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getParametersSuiteParameterParserRuleCall_6_0_0()); }
	ruleSuiteParameter{ after(grammarAccess.getSuiteAccess().getParametersSuiteParameterParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__ReturnAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getReturnSuiteReturnParserRuleCall_7_0_0()); }
	ruleSuiteReturn{ after(grammarAccess.getSuiteAccess().getReturnSuiteReturnParserRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__ForkAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getForkForkDefinitionCrossReference_8_2_0()); }
(
{ before(grammarAccess.getSuiteAccess().getForkForkDefinitionQualifiedNameParserRuleCall_8_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteAccess().getForkForkDefinitionQualifiedNameParserRuleCall_8_2_0_1()); }
)
{ after(grammarAccess.getSuiteAccess().getForkForkDefinitionCrossReference_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__VariantsAssignment_9_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getVariantsVariantDefinitionCrossReference_9_2_0_0()); }
(
{ before(grammarAccess.getSuiteAccess().getVariantsVariantDefinitionQualifiedNameParserRuleCall_9_2_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteAccess().getVariantsVariantDefinitionQualifiedNameParserRuleCall_9_2_0_0_1()); }
)
{ after(grammarAccess.getSuiteAccess().getVariantsVariantDefinitionCrossReference_9_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getNameVariableOrConstantEntityCrossReference_0_0()); }
(
{ before(grammarAccess.getSuiteParameterAccess().getNameVariableOrConstantEntityQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteParameterAccess().getNameVariableOrConstantEntityQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSuiteParameterAccess().getNameVariableOrConstantEntityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getSuiteParameterAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteReturn__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteReturnAccess().getNameSuiteReturnDefinitionCrossReference_0_0()); }
(
{ before(grammarAccess.getSuiteReturnAccess().getNameSuiteReturnDefinitionQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteReturnAccess().getNameSuiteReturnDefinitionQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSuiteReturnAccess().getNameSuiteReturnDefinitionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteReturn__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteReturnAccess().getTargetVariableVariableParserRuleCall_4_0()); }
	ruleVariableVariable{ after(grammarAccess.getSuiteReturnAccess().getTargetVariableVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameParameterNameParserRuleCall_0_0()); }
	ruleParameterName{ after(grammarAccess.getParameterAccess().getNameParameterNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getParameterAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FixedParameterName__AnnotationAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedParameterNameAccess().getAnnotationJvmAnnotationReferenceCrossReference_0()); }
(
{ before(grammarAccess.getFixedParameterNameAccess().getAnnotationJvmAnnotationReferenceIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFixedParameterNameAccess().getAnnotationJvmAnnotationReferenceIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFixedParameterNameAccess().getAnnotationJvmAnnotationReferenceCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArbitraryParameterOrResultName__IdentifierAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getIdentifierIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getIdentifierIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArbitraryParameterOrResultName__StringIdentifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getStringIdentifierSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getStringIdentifierSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__FirstOperandAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getFirstOperandValueOrEnumValueOrOperationParserRuleCall_2_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getStandardOperationAccess().getFirstOperandValueOrEnumValueOrOperationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__OperatorsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsAlternatives_4_0_0()); }
(rule__StandardOperation__OperatorsAlternatives_4_0_0)
{ after(grammarAccess.getStandardOperationAccess().getOperatorsAlternatives_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__MoreOperandsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getMoreOperandsValueOrEnumValueOrOperationParserRuleCall_4_2_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getStandardOperationAccess().getMoreOperandsValueOrEnumValueOrOperationParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__PrefixOperandAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getPrefixOperandValueOrEnumValueOrOperationCollectionParserRuleCall_2_0_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getCustomOperationAccess().getPrefixOperandValueOrEnumValueOrOperationCollectionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getDefinitionOperationDefinitionCrossReference_3_0()); }
(
{ before(grammarAccess.getCustomOperationAccess().getDefinitionOperationDefinitionQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getCustomOperationAccess().getDefinitionOperationDefinitionQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getCustomOperationAccess().getDefinitionOperationDefinitionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__PostfixOperandAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getPostfixOperandValueOrEnumValueOrOperationCollectionParserRuleCall_4_2_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getCustomOperationAccess().getPostfixOperandValueOrEnumValueOrOperationCollectionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getValueValueOrEnumValueOrOperationParserRuleCall_0_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getValueValueOrEnumValueOrOperationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__MoreValuesAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getMoreValuesValueOrEnumValueOrOperationParserRuleCall_1_3_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getMoreValuesValueOrEnumValueOrOperationParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__IntegerValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerValueAccess().getIntegerValueINTEGERTerminalRuleCall_0()); }
	RULE_INTEGER{ after(grammarAccess.getIntegerValueAccess().getIntegerValueINTEGERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__DecimalValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalValueAccess().getDecimalValueDECIMALTerminalRuleCall_0()); }
	RULE_DECIMAL{ after(grammarAccess.getDecimalValueAccess().getDecimalValueDECIMALTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__StringValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getStringValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getStringValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegexValue__RegexValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegexValueAccess().getRegexValueREGEXTerminalRuleCall_0()); }
	RULE_REGEX{ after(grammarAccess.getRegexValueAccess().getRegexValueREGEXTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__BooleanValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getBooleanValueAlternatives_0()); }
(rule__BooleanValue__BooleanValueAlternatives_0)
{ after(grammarAccess.getBooleanValueAccess().getBooleanValueAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateValue__DateValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateValueAccess().getDateValueISODATETerminalRuleCall_0()); }
	RULE_ISODATE{ after(grammarAccess.getIsoDateValueAccess().getDateValueISODATETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateValue__DateValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateValueAccess().getDateValueEURODATETerminalRuleCall_0()); }
	RULE_EURODATE{ after(grammarAccess.getEuropeanDateValueAccess().getDateValueEURODATETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__USDateValue__DateValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateValueAccess().getDateValueUSDATETerminalRuleCall_0()); }
	RULE_USDATE{ after(grammarAccess.getUSDateValueAccess().getDateValueUSDATETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsoTimeValue__TimeValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoTimeValueAccess().getTimeValueISOTIMETerminalRuleCall_0()); }
	RULE_ISOTIME{ after(grammarAccess.getIsoTimeValueAccess().getTimeValueISOTIMETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple24HrsTimeValue__TimeValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple24HrsTimeValueAccess().getTimeValueTWENTYFOURHRSTIMETerminalRuleCall_0()); }
	RULE_TWENTYFOURHRSTIME{ after(grammarAccess.getSimple24HrsTimeValueAccess().getTimeValueTWENTYFOURHRSTIMETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple12HrsTimeValue__TimeValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_0()); }
	RULE_TWELVEHRSTIME{ after(grammarAccess.getSimple12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateAndTimeValue__DateValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getDateValueISODATETerminalRuleCall_0_0()); }
	RULE_ISODATE{ after(grammarAccess.getIsoDateAndTimeValueAccess().getDateValueISODATETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateAndTimeValue__TimeValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getTimeValueISOTIMETerminalRuleCall_1_0()); }
	RULE_ISOTIME{ after(grammarAccess.getIsoDateAndTimeValueAccess().getTimeValueISOTIMETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__DateValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getDateValueEURODATETerminalRuleCall_0_0()); }
	RULE_EURODATE{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getDateValueEURODATETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__TimeValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getTimeValueTWENTYFOURHRSTIMETerminalRuleCall_2_0()); }
	RULE_TWENTYFOURHRSTIME{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getTimeValueTWENTYFOURHRSTIMETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__DateValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getDateValueEURODATETerminalRuleCall_0_0()); }
	RULE_EURODATE{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getDateValueEURODATETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__TimeValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_2_0()); }
	RULE_TWELVEHRSTIME{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__DateValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getDateValueUSDATETerminalRuleCall_0_0()); }
	RULE_USDATE{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getDateValueUSDATETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__TimeValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_2_0()); }
	RULE_TWELVEHRSTIME{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaConstantValue__ConstantAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaConstantValueAccess().getConstantJavaConstantReferenceParserRuleCall_1_0()); }
	ruleJavaConstantReference{ after(grammarAccess.getJavaConstantValueAccess().getConstantJavaConstantReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameVariableOrConstantEntityCrossReference_0_0()); }
(
{ before(grammarAccess.getVariableAccess().getNameVariableOrConstantEntityQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVariableAccess().getNameVariableOrConstantEntityQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getVariableAccess().getNameVariableOrConstantEntityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__AttributeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getAttributeQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getVariableAccess().getAttributeQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableVariable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableVariableAccess().getNameVariableEntityCrossReference_0()); }
(
{ before(grammarAccess.getVariableVariableAccess().getNameVariableEntityQualifiedNameParserRuleCall_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVariableVariableAccess().getNameVariableEntityQualifiedNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableVariableAccess().getNameVariableEntityCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameConstantEntityCrossReference_0()); }
(
{ before(grammarAccess.getConstantAccess().getNameConstantEntityQualifiedNameParserRuleCall_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getConstantAccess().getNameConstantEntityQualifiedNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getConstantAccess().getNameConstantEntityCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__EnumValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumValueAccess().getEnumValueJvmEnumerationLiteralCrossReference_0()); }
(
{ before(grammarAccess.getEnumValueAccess().getEnumValueJvmEnumerationLiteralUPPERCASE_IDTerminalRuleCall_0_1()); }
	RULE_UPPERCASE_ID{ after(grammarAccess.getEnumValueAccess().getEnumValueJvmEnumerationLiteralUPPERCASE_IDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getEnumValueAccess().getEnumValueJvmEnumerationLiteralCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__AttributesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getAttributesKeyValuePairParserRuleCall_2_0_0()); }
	ruleKeyValuePair{ after(grammarAccess.getNestedObjectAccess().getAttributesKeyValuePairParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedNestedObject__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedNestedObjectAccess().getTypeJavaClassReferenceParserRuleCall_1_0()); }
	ruleJavaClassReference{ after(grammarAccess.getTypedNestedObjectAccess().getTypeJavaClassReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedNestedObject__NestedObjectAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedNestedObjectAccess().getNestedObjectNestedObjectParserRuleCall_4_0()); }
	ruleNestedObject{ after(grammarAccess.getTypedNestedObjectAccess().getNestedObjectNestedObjectParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__IdentifierAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getIdentifierIDTerminalRuleCall_0_0_0()); }
	RULE_ID{ after(grammarAccess.getKeyValuePairAccess().getIdentifierIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__StringIdentifierAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getStringIdentifierSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getKeyValuePairAccess().getStringIdentifierSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getKeyValuePairAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaClassReference__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaClassReferenceAccess().getTypeJvmTypeCrossReference_0()); }
(
{ before(grammarAccess.getJavaClassReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_1()); }
	ruleQualifiedJavaClassName{ after(grammarAccess.getJavaClassReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getJavaClassReferenceAccess().getTypeJvmTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getMethodReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_0_1()); }
	ruleQualifiedJavaClassName{ after(grammarAccess.getMethodReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMethodReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__MethodAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getMethodJvmOperationCrossReference_2_0()); }
(
{ before(grammarAccess.getMethodReferenceAccess().getMethodJvmOperationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodReferenceAccess().getMethodJvmOperationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMethodReferenceAccess().getMethodJvmOperationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaConstantReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaConstantReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getJavaConstantReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_0_1()); }
	ruleQualifiedJavaClassName{ after(grammarAccess.getJavaConstantReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getJavaConstantReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaConstantReference__ConstantAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaConstantReferenceAccess().getConstantJvmFieldCrossReference_2_0()); }
(
{ before(grammarAccess.getJavaConstantReferenceAccess().getConstantJvmFieldUPPERCASE_IDTerminalRuleCall_2_0_1()); }
	RULE_UPPERCASE_ID{ after(grammarAccess.getJavaConstantReferenceAccess().getConstantJvmFieldUPPERCASE_IDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getJavaConstantReferenceAccess().getConstantJvmFieldCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionMultiplier__CountAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionMultiplierAccess().getCountConstantValueParserRuleCall_0_0()); }
	ruleConstantValue{ after(grammarAccess.getExecutionMultiplierAccess().getCountConstantValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DocumentationComment__ContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDocumentationCommentAccess().getContentML_DOC_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_DOC_COMMENT{ after(grammarAccess.getDocumentationCommentAccess().getContentML_DOC_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOLEAN_TRUE : 'true';

RULE_BOOLEAN_FALSE : 'false';

RULE_UPPERCASE_ID : 'A'..'Z' ('A'..'Z'|'a'..'z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INTEGER : '-'? ('0'..'9')+;

RULE_DECIMAL : '-'? ('0'..'9')+ '.' ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_REGEX : '~' ('~~'|~(('~~'|'~')))* '~';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))*;

RULE_SL_VISIBLE_COMMENT : '-- ' ~(('\n'|'\r'))*;

RULE_SL_VISIBLE_TITLE_COMMENT : '--- ' ~(('\n'|'\r'))*;

RULE_ML_VISIBLE_COMMENT : '/- ' ( options {greedy=false;} : . )*'-/';

RULE_ML_VISIBLE_TITLE_COMMENT : '/-- ' ( options {greedy=false;} : . )*'--/';

RULE_ML_DOC_COMMENT : '/**' ( options {greedy=false;} : . )*'*/';

RULE_DIVIDER : '----' '-'*;

RULE_WS : (' '|'\t')+;

RULE_NEWLINE : ('\r'|'\n')+;

RULE_ISODATE : '0'..'9' '0'..'9' '0'..'9' '0'..'9' '-' '0'..'1' '0'..'9' '-' '0'..'3' '0'..'9';

RULE_ISOTIME : ('T' RULE_TWENTYFOURHRSTIME RULE_ISOTIMEZONE?|RULE_TWENTYFOURHRSTIME RULE_ISOTIMEZONE);

fragment RULE_ISOTIMEZONE : ('Z'|('+'|'-') '0'..'2' '0'..'9' ':'? '0'..'5' '0'..'9');

RULE_EURODATE : '0'..'3' '0'..'9' '.' '0'..'1' '0'..'9' '.' '0'..'9' '0'..'9' '0'..'9' '0'..'9';

RULE_USDATE : '0'..'1' '0'..'9' '/' '0'..'3' '0'..'9' '/' '0'..'9' '0'..'9' '0'..'9' '0'..'9';

RULE_TWENTYFOURHRSTIME : '0'..'2' '0'..'9' ':' '0'..'5' '0'..'9' (':' '0'..'6' '0'..'9' ('.' '0'..'9' '0'..'9' '0'..'9')?)?;

RULE_TWELVEHRSTIME : '0'..'1' '0'..'9' ':' '0'..'5' '0'..'9' (':' '0'..'6' '0'..'9' ('.' '0'..'9' '0'..'9' '0'..'9')?)? ('am'|'pm');

RULE_TIMESPAN : ('0'..'9')+ ('y'|'year'|'years'|'mon'|'month'|'months'|'d'|'day'|'days'|'h'|'hour'|'hours'|'m'|'minute'|'minutes'|'s'|'second'|'seconds'|'ms'|'millisecond'|'milliseconds');

RULE_MULTIPLIER : ('0'..'9')+ ('.' ('0'..'9')+)? 'x';

RULE_ANY_OTHER : .;


