<?xml version="1.0" encoding="UTF-8"?>
<integrity name="Integrity JUnit Testing" timestamp="04.02.22 12:58" isotimestamp="2022-02-04T12:58:39" duration="22.628" abortMessage="Checkpoint Test 'Echo the string 'foo'' has failed: 'bar' expected, but got 'foo'!">
  <variables />
  <suite id="0" name="integrity.basic.exceptions.checkpointTests.checkpointTestNested" timestamp="04.02.22 12:58:39.0142">
    <setup />
    <variables />
    <statements>
      <suite id="1" line="17" name="integrity.basic.exceptions.checkpointTests.innerCheckpointTestNested" timestamp="04.02.22 12:58:39.0145">
        <setup />
        <variables />
        <statements>
          <call id="2" line="22" name="noOp" description="Do absolutely nothing." fixture="de.gebit.integrity.tests.fixtures.basic.NoOpFixture#noOp" timestamp="04.02.22 12:58:39.0146">
            <parameters />
            <result duration="0.379" type="success" />
          </call>
          <test id="3" line="25" name="echoStringTest" description="Echo the string 'foo'" fixture="de.gebit.integrity.tests.fixtures.basic.NoOpFixture#echoString" timestamp="04.02.22 12:58:39.0152">
            <results duration="2.295" successCount="1" failureCount="0" exceptionCount="0">
              <result duration="2.295" description="Echo the string 'foo'" type="success">
                <parameters>
                  <parameter name="string" value="foo" />
                </parameters>
                <comparisons>
                  <comparison expectedValue="foo" value="foo" type="success" />
                </comparisons>
              </result>
            </results>
          </test>
          <test id="4" line="28" name="echoStringTest" description="Echo the string 'foo'" fixture="de.gebit.integrity.tests.fixtures.basic.NoOpFixture#echoString" timestamp="04.02.22 12:58:39.0159">
            <results duration="0.271" successCount="0" failureCount="0" exceptionCount="1">
              <result duration="0.271" description="Echo the string 'foo'" type="exception" exceptionMessage="Checkpoint Test 'Echo the string 'foo'' has failed: 'bar' expected, but got 'foo'!" exceptionTrace="de.gebit.integrity.exceptions.AbortExecutionException: Checkpoint Test 'Echo the string 'foo'' has failed: 'bar' expected, but got 'foo'!&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner.executeTest(DefaultTestRunner.java:1949)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner.executeSuite(DefaultTestRunner.java:1460)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner.callSuiteSingle(DefaultTestRunner.java:1154)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner.callSuite(DefaultTestRunner.java:1013)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner.executeSuite(DefaultTestRunner.java:1456)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner.callSuiteSingle(DefaultTestRunner.java:1154)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner$6.run(DefaultTestRunner.java:957)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner$6.run(DefaultTestRunner.java:1)&#xA;&#x9;at de.gebit.integrity.runner.logging.TestRunnerPerformanceLogger.executeAndLog(TestRunnerPerformanceLogger.java:101)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner.runInternal(DefaultTestRunner.java:952)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner.run(DefaultTestRunner.java:819)&#xA;&#x9;at de.gebit.integrity.runner.DefaultTestRunner.run(DefaultTestRunner.java:709)&#xA;&#x9;at de.gebit.integrity.tests.junit.IntegrityJUnitTest.executeIntegritySuite(IntegrityJUnitTest.java:176)&#xA;&#x9;at de.gebit.integrity.tests.junit.IntegrityJUnitTest.executeIntegritySuite(IntegrityJUnitTest.java:127)&#xA;&#x9;at de.gebit.integrity.tests.junit.basic.exceptions.CheckpointTests.checkpointTestNested(CheckpointTests.java:51)&#xA;&#x9;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#xA;&#x9;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#xA;&#x9;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#xA;&#x9;at java.lang.reflect.Method.invoke(Method.java:498)&#xA;&#x9;at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)&#xA;&#x9;at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#xA;&#x9;at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)&#xA;&#x9;at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#xA;&#x9;at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#xA;&#x9;at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)&#xA;&#x9;at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)&#xA;&#x9;at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)&#xA;&#x9;at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)&#xA;&#x9;at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)&#xA;&#x9;at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)&#xA;&#x9;at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)&#xA;&#x9;at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)&#xA;&#x9;at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)&#xA;&#x9;at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)&#xA;&#x9;at org.junit.runners.ParentRunner.run(ParentRunner.java:413)&#xA;&#x9;at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)&#xA;&#x9;at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)&#xA;&#x9;at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:542)&#xA;&#x9;at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:770)&#xA;&#x9;at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)&#xA;&#x9;at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)&#xA;">
                <parameters>
                  <parameter name="string" value="foo" />
                </parameters>
              </result>
            </results>
          </test>
        </statements>
        <returns />
        <teardown />
        <result duration="18.787" successCount="1" failureCount="0" exceptionCount="1" testExceptionCount="1" callExceptionCount="0" />
      </suite>
    </statements>
    <returns />
    <teardown />
    <result duration="19.901" successCount="1" failureCount="0" exceptionCount="1" testExceptionCount="1" callExceptionCount="0" />
  </suite>
</integrity>

